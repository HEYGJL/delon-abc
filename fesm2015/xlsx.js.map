{"version":3,"file":"xlsx.js","sources":["../../../../packages/abc/xlsx/xlsx.service.ts","../../../../packages/abc/xlsx/xlsx.directive.ts","../../../../packages/abc/xlsx/xlsx.module.ts","../../../../packages/abc/xlsx/xlsx.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\nimport { AlainConfigService, AlainXlsxConfig } from '@delon/util/config';\nimport { LazyResult, LazyService } from '@delon/util/other';\nimport { saveAs } from 'file-saver';\nimport isUtf8 from 'isutf8';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { XlsxExportOptions, XlsxExportResult, XlsxExportSheet } from './xlsx.types';\n\ndeclare var XLSX: any;\ndeclare var cptable: any;\n\n@Injectable({ providedIn: 'root' })\nexport class XlsxService {\n  constructor(private http: HttpClient, private lazy: LazyService, configSrv: AlainConfigService, private ngZone: NgZone) {\n    this.cog = configSrv.merge('xlsx', {\n      url: 'https://cdn.bootcdn.net/ajax/libs/xlsx/0.16.8/xlsx.full.min.js',\n      modules: [`https://cdn.bootcdn.net/ajax/libs/xlsx/0.16.8/cpexcel.min.js`],\n    })!;\n  }\n  private cog: AlainXlsxConfig;\n\n  private init(): Promise<LazyResult[]> {\n    return typeof XLSX !== 'undefined' ? Promise.resolve([]) : this.lazy.load([this.cog.url!].concat(this.cog.modules!));\n  }\n\n  private read(data: NzSafeAny, options: { type: 'array' | 'binary' | 'string' }): { [key: string]: NzSafeAny[][] } {\n    const ret: NzSafeAny = {};\n    this.ngZone.runOutsideAngular(() => {\n      if (options.type === 'binary') {\n        const buf = new Uint8Array(data);\n        if (!isUtf8(buf)) {\n          try {\n            data = cptable.utils.decode(936, buf);\n            options.type = 'string';\n          } catch {\n            options.type = 'array';\n          }\n        }\n      }\n      const wb = XLSX.read(data, options);\n      wb.SheetNames.forEach((name: string) => {\n        const sheet: NzSafeAny = wb.Sheets[name];\n        ret[name] = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n      });\n    });\n    return ret;\n  }\n\n  /**\n   * 导入Excel并输出JSON，支持 `<input type=\"file\">`、URL 形式\n   */\n  import(fileOrUrl: File | string): Promise<{ [key: string]: any[][] }>;\n\n  /**\n   * @deprecated 无须指定 `rABS` 参数，从12.x后将移除\n   *\n   * 导入Excel并输出JSON，支持 `<input type=\"file\">`、URL 形式\n   * @param rABS 加载数据方式 `readAsBinaryString` 或 `readAsArrayBuffer` （默认），[更多细节](http://t.cn/R3n63A0)\n   */\n  // tslint:disable-next-line: unified-signatures\n  import(fileOrUrl: File | string, rABS: 'readAsBinaryString' | 'readAsArrayBuffer'): Promise<{ [key: string]: any[][] }>;\n\n  import(\n    fileOrUrl: File | string,\n    _rABS: 'readAsBinaryString' | 'readAsArrayBuffer' = 'readAsBinaryString',\n  ): Promise<{ [key: string]: any[][] }> {\n    return new Promise<{ [key: string]: any[][] }>((resolve, reject) => {\n      this.init()\n        .then(() => {\n          // from url\n          if (typeof fileOrUrl === 'string') {\n            this.http.request('GET', fileOrUrl, { responseType: 'arraybuffer' }).subscribe(\n              (res: ArrayBuffer) => {\n                this.ngZone.run(() => resolve(this.read(new Uint8Array(res), { type: 'array' })));\n              },\n              (err: any) => {\n                reject(err);\n              },\n            );\n            return;\n          }\n          // from file\n          const reader: FileReader = new FileReader();\n          reader.onload = (e: any) => {\n            this.ngZone.run(() => resolve(this.read(e.target.result, { type: 'binary' })));\n          };\n          reader.readAsArrayBuffer(fileOrUrl);\n        })\n        .catch(() => reject(`Unable to load xlsx.js`));\n    });\n  }\n\n  async export(options: XlsxExportOptions): Promise<XlsxExportResult> {\n    return new Promise<XlsxExportResult>((resolve, reject) => {\n      this.init()\n        .then(() => {\n          this.ngZone.runOutsideAngular(() => {\n            const wb: any = XLSX.utils.book_new();\n            if (Array.isArray(options.sheets)) {\n              (options.sheets as XlsxExportSheet[]).forEach((value: XlsxExportSheet, index: number) => {\n                const ws: any = XLSX.utils.aoa_to_sheet(value.data);\n                XLSX.utils.book_append_sheet(wb, ws, value.name || `Sheet${index + 1}`);\n              });\n            } else {\n              wb.SheetNames = Object.keys(options.sheets);\n              wb.Sheets = options.sheets;\n            }\n\n            if (options.callback) options.callback(wb);\n\n            const wbout: ArrayBuffer = XLSX.write(wb, {\n              bookType: 'xlsx',\n              bookSST: false,\n              type: 'array',\n              ...options.opts,\n            });\n            const filename = options.filename || 'export.xlsx';\n            saveAs(new Blob([wbout], { type: 'application/octet-stream' }), filename);\n\n            resolve({ filename, wb });\n          });\n        })\n        .catch(err => reject(err));\n    });\n  }\n\n  /**\n   * 数据转符号名\n   * - `1` => `A`\n   * - `27` => `AA`\n   * - `703` => `AAA`\n   */\n  numberToSchema(val: number): string {\n    const startCode = 'A'.charCodeAt(0);\n    let res = '';\n\n    do {\n      --val;\n      res = String.fromCharCode(startCode + (val % 26)) + res;\n      val = (val / 26) >> 0;\n    } while (val > 0);\n\n    return res;\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { XlsxService } from './xlsx.service';\nimport { XlsxExportOptions } from './xlsx.types';\n\n@Directive({\n  selector: '[xlsx]',\n  exportAs: 'xlsx',\n  host: {\n    '(click)': '_click()',\n  },\n})\nexport class XlsxDirective {\n  @Input('xlsx') data: XlsxExportOptions;\n\n  constructor(private srv: XlsxService) {}\n\n  _click(): void {\n    this.srv.export(this.data);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { XlsxDirective } from './xlsx.directive';\n\nconst COMPONENTS = [XlsxDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class XlsxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}