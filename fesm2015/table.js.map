{"version":3,"file":"table.js","sources":["../../../../packages/abc/st/st-row.directive.ts","../../../../packages/abc/st/st-widget.ts","../../../../packages/abc/st/st-column-source.ts","../../../../packages/abc/st/st-data-source.ts","../../../../packages/abc/st/st-export.ts","../../../../packages/abc/st/st-widget-host.directive.ts","../../../../packages/abc/st/st.config.ts","../../../../packages/abc/st/st.component.ts","../../../../packages/abc/st/st.module.ts","../../../../packages/abc/st/table.ts"],"sourcesContent":["import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>): void {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string): TemplateRef<void> {\n    return this.titles[path];\n  }\n\n  getRow(path: string): TemplateRef<void> {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row') id: string;\n\n  @Input() type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class STWidgetRegistry {\n  private _widgets: { [type: string]: any } = {};\n\n  get widgets(): any {\n    return this._widgets;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  get(type: string): any {\n    return this._widgets[type];\n  }\n}\n","import { Host, Inject, Injectable, Optional, TemplateRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { AlainSTConfig } from '@delon/util/config';\nimport { deepCopy, warn } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STRowSource } from './st-row.directive';\nimport { STWidgetRegistry } from './st-widget';\nimport {\n  STColumn,\n  STColumnButton,\n  STColumnButtonPop,\n  STColumnFilter,\n  STColumnGroupType, STColumnSafeType,\n  STIcon,\n  STResizable,\n  STSortMap,\n  STWidthMode,\n} from './st.interfaces';\nimport { _STColumn } from './st.types';\n\nexport interface STColumnSourceProcessOptions {\n  widthMode: STWidthMode;\n  resizable: STResizable;\n  safeType: STColumnSafeType;\n}\n\n@Injectable()\nexport class STColumnSource {\n  private cog: AlainSTConfig;\n\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private stWidgetRegistry: STWidgetRegistry,\n  ) {}\n\n  setCog(val: AlainSTConfig): void {\n    this.cog = val;\n  }\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter when type is modal or static`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter when type is drawer`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]): void {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: _STColumn[]): void {\n    const countReduce = (a: number, b: _STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: _STColumn): STSortMap {\n    const res = this.fixSortCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixSortCoerce(item: _STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    } else if (typeof item.sort === 'boolean') {\n      res.compare = (a, b) => a[item.indexKey!] - b[item.indexKey!];\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: _STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl!));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: _STColumn): void {\n    if (item.renderTitle) {\n      item.__renderTitle =\n        typeof item.renderTitle === 'string' ? this.rowSource.getTitle(item.renderTitle) : (item.renderTitle as TemplateRef<void>);\n    }\n    if (item.render) {\n      item.__render = typeof item.render === 'string' ? this.rowSource.getRow(item.render) : (item.render as TemplateRef<void>);\n    }\n  }\n\n  private widgetCoerce(item: _STColumn): void {\n    if (item.type !== 'widget') return;\n    if (item.widget == null || !this.stWidgetRegistry.has(item.widget.type)) {\n      delete item.type;\n      warn(`st: No widget for type \"${item.widget?.type}\"`);\n    }\n  }\n\n  private genHeaders(rootColumns: _STColumn[]): { headers: _STColumn[][]; headerWidths: string[] | null } {\n    const rows: _STColumn[][] = [];\n    const widths: string[] = [];\n    const fillRowCells = (columns: _STColumn[], colIndex: number, rowIndex = 0): number[] => {\n      // Init rows\n      rows[rowIndex] = rows[rowIndex] || [];\n\n      let currentColIndex = colIndex;\n      const colSpans: number[] = columns.map(column => {\n        const cell: STColumnGroupType = {\n          column,\n          colStart: currentColIndex,\n          hasSubColumns: false,\n        };\n\n        let colSpan: number = 1;\n\n        const subColumns = column.children;\n        if (Array.isArray(subColumns) && subColumns.length > 0) {\n          colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n          cell.hasSubColumns = true;\n        } else {\n          widths.push((cell.column.width as string) || '');\n        }\n\n        if ('colSpan' in column) {\n          colSpan = column.colSpan!;\n        }\n\n        if ('rowSpan' in column) {\n          cell.rowSpan = column.rowSpan;\n        }\n\n        cell.colSpan = colSpan;\n        cell.colEnd = cell.colStart + colSpan - 1;\n        rows[rowIndex].push(cell as NzSafeAny);\n\n        currentColIndex += colSpan;\n\n        return colSpan;\n      });\n\n      return colSpans;\n    };\n\n    fillRowCells(rootColumns, 0);\n\n    // Handle `rowSpan`\n    const rowCount = rows.length;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      rows[rowIndex].forEach(cell => {\n        if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n          cell.rowSpan = rowCount - rowIndex;\n        }\n      });\n    }\n\n    return { headers: rows, headerWidths: rowCount > 1 ? widths : null };\n  }\n\n  private cleanCond(list: _STColumn[]): _STColumn[] {\n    const res: _STColumn[] = [];\n    const copyList = deepCopy(list);\n    for (const item of copyList) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      res.push(item);\n    }\n    return res;\n  }\n\n  process(\n    list: STColumn[],\n    options: STColumnSourceProcessOptions,\n  ): { columns: _STColumn[]; headers: _STColumn[][]; headerWidths: string[] | null } {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: _STColumn[] = [];\n\n    const processItem = (item: _STColumn): _STColumn => {\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl!));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null) ||\n        (item.type === 'enum' && item.enum == null)\n      ) {\n        item.type = '';\n      }\n      item._isTruncate = !!item.width && options.widthMode.strictBehavior === 'truncate' && item.type !== 'img';\n      // className\n      if (!item.className) {\n        item.className = ({\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        } as NzSafeAny)[item.type!];\n      }\n      item._className = item.className || (item._isTruncate ? 'text-truncate' : null);\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n      item.safeType = item.safeType ?? options.safeType;\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // widget\n      this.widgetCoerce(item);\n      // restore custom row\n      this.restoreRender(item);\n      // resizable\n      item.resizable = {\n        disabled: true,\n        bounds: 'window',\n        minWidth: 60,\n        maxWidth: 360,\n        preview: true,\n        ...options.resizable,\n        ...(typeof item.resizable === 'boolean' ? ({ disabled: !item.resizable } as STResizable) : item.resizable),\n      };\n\n      item.__point = point++;\n\n      return item;\n    };\n\n    const processList = (data: _STColumn[]): void => {\n      for (const item of data) {\n        columns.push(processItem(item));\n        if (Array.isArray(item.children)) {\n          processList(item.children);\n        }\n      }\n    };\n\n    const copyList = this.cleanCond(list as _STColumn[]);\n    processList(copyList);\n\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns as _STColumn[]);\n    return { columns: columns.filter(w => !Array.isArray(w.children) || w.children.length === 0), ...this.genHeaders(copyList) };\n  }\n\n  restoreAllRender(columns: _STColumn[]): void {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: _STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DatePipe, YNPipe, _HttpClient } from '@delon/theme';\nimport { CurrencyService } from '@delon/util/format';\nimport { deepCopy, deepGet } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  STColumnFilter,\n  STColumnFilterMenu,\n  STData,\n  STMultiSort,\n  STMultiSortResultType,\n  STPage,\n  STReq,\n  STReqReNameType,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STSortMap,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './st.interfaces';\nimport {_STColumn, _STDataValue} from './st.types';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: _STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** 是否需要显示分页器 */\n  pageShow: boolean;\n  /** 新 `pi`，若返回 `undefined` 表示用户受控 */\n  pi: number;\n  /** 新 `ps`，若返回 `undefined` 表示用户受控 */\n  ps: number;\n  /** 新 `total`，若返回 `undefined` 表示用户受控 */\n  total: number;\n  /** 数据 */\n  list: STData[];\n  /** 统计数据 */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private currencySrv: CurrencyService,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns as _STColumn[]);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns as _STColumn[], retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: _STColumn, idx: number): _STDataValue {\n    try {\n      const safeHtml = col.safeType === 'safeHtml';\n      if (col.format) {\n        const formatRes = col.format(item, col, idx) || '';\n        return {\n          text: formatRes,\n          _text: safeHtml ? this.dom.bypassSecurityTrustHtml(formatRes) : formatRes,\n          org: formatRes,\n          safeType: col.safeType!\n        };\n      }\n\n      const value = deepGet(item, col.index as string[], col.default);\n\n      let text = value;\n      let color: string | undefined;\n      switch (col.type) {\n        case 'no':\n          text = this.getNoIndex(item, col, idx);\n          break;\n        case 'img':\n          text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n          break;\n        case 'number':\n          text = this.numberPipe.transform(value, col.numberDigits);\n          break;\n        case 'currency':\n          text = this.currencySrv.format(value, col.currency?.format);\n          break;\n        case 'date':\n          text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n          break;\n        case 'yn':\n          text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n          break;\n        case 'enum':\n          text = col.enum![value];\n          break;\n        case 'tag':\n        case 'badge':\n          const data = col.type === 'tag' ? col.tag : col.badge;\n          if (data && data[text]) {\n            const dataItem = data[text];\n            text = dataItem.text;\n            color = dataItem.color;\n          } else {\n            text = '';\n          }\n          break;\n      }\n      if (text == null) text = '';\n      return {\n        text,\n        _text: safeHtml ? this.dom.bypassSecurityTrustHtml(text) : text,\n        org: value,\n        color,\n        safeType: col.safeType!,\n        buttons: []\n      };\n    } catch (ex) {\n      const text = `INVALID DATA`;\n      console.error(`Failed to get data`, item, col, ex);\n      return { text, _text: text, org: text, buttons: [], safeType: 'text' };\n    }\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    if (!(reqOptions.params instanceof HttpParams)) {\n      reqOptions.params = new HttpParams({ fromObject: reqOptions.params });\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: _STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: _STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: _STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: _STColumn[]): ((a: STData, b: STData) => number) | void {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(singleSort: STSingleSort | undefined, multiSort: STMultiSort | undefined, columns: _STColumn[]): STMultiSortResultType {\n    let ret: STMultiSortResultType = {};\n    const sortList = this.getValidSort(columns);\n\n    if (multiSort) {\n      const ms: STMultiSort = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        keepEmptyKey: true,\n        arrayParam: false,\n        ...multiSort,\n      };\n\n      const sortMap = sortList\n        .sort((a, b) => a.tick - b.tick)\n        .map(item => item.key! + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default));\n\n      ret = { [ms.key!]: ms.arrayParam ? sortMap : sortMap.join(ms.separator) };\n\n      return sortMap.length === 0 && ms.keepEmptyKey === false ? {} : ret;\n    }\n\n    if (sortList.length === 0) return ret;\n\n    const mapData = sortList[0];\n    let sortFiled = mapData.key;\n    let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n    if (singleSort) {\n      sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n      sortFiled = singleSort.key || 'sort';\n    }\n    ret[sortFiled as string] = sortValue as string;\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter): STColumnFilterMenu[] {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: _STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: { [key: string]: NzSafeAny } = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: _STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res: { [key: string]: NzSafeAny } = {};\n    columns.forEach((col, index) => {\n      res[col.key || col.indexKey || index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: _STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currencySrv.format(res.value, col.currency?.format) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxExportResult, XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STColumn, STExportOptions } from './st.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      if (val != null) {\n        switch (col.type) {\n          case 'currency':\n            ret.t = 'n';\n            break;\n          case 'date':\n            ret.t = 'd';\n            break;\n          case 'yn':\n            const yn = col.yn!;\n            ret.v = ret.v === yn.truth ? yn.yes || '是' : yn.no || '否';\n            break;\n        }\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: { [key: string]: NzSafeAny } } = {};\n    const sheet: { [key: string]: NzSafeAny } = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt.columens!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const colLen = colData.length;\n    const dataLen = opt.data!.length;\n\n    // column\n    for (let i = 0; i < colLen; i++) {\n      const tit = colData[i].title;\n      sheet[`${this.xlsxSrv.numberToSchema(i + 1)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dataLen; i++) {\n      for (let j = 0; j < colLen; j++) {\n        sheet[`${this.xlsxSrv.numberToSchema(j + 1)}${i + 2}`] = this._stGet(opt.data![i], colData[j], i);\n      }\n    }\n\n    if (colLen > 0 && dataLen > 0) {\n      sheet['!ref'] = `A1:${this.xlsxSrv.numberToSchema(colLen)}${dataLen + 1}`;\n    }\n\n    return sheets;\n  }\n\n  async export(opt: STExportOptions): Promise<XlsxExportResult> {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STData } from './st.interfaces';\n\n@Directive({ selector: '[st-widget-host]' })\nexport class STWidgetHostDirective implements OnInit {\n  @Input() record: STData;\n  @Input() column: STColumn;\n\n  constructor(\n    private stWidgetRegistry: STWidgetRegistry,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    const widget = this.column.widget!;\n    const componentType = this.stWidgetRegistry.get(widget.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType as any);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const { record, column } = this;\n    const data: { [key: string]: any } = widget.params ? widget.params({ record, column }) : { record };\n    Object.keys(data).forEach(key => {\n      (componentRef.instance as any)[key] = data[key];\n    });\n  }\n}\n","import { AlainSTConfig } from '@delon/util';\n\nexport const ST_DEFAULT_CONFIG: AlainSTConfig = {\n  pi: 1,\n  ps: 10,\n  size: 'default',\n  responsive: true,\n  responsiveHideHeaderFooter: false,\n  req: {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  },\n  res: {\n    reName: { list: ['list'], total: ['total'] },\n  },\n  page: {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n    itemRender: null,\n    simple: false,\n  },\n  modal: {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  },\n  drawer: {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  },\n  pop: {\n    title: '确认删除吗？',\n    trigger: 'click',\n    placement: 'top',\n  },\n  rowClickTime: 200,\n  btnIcon: {\n    theme: 'outline',\n    spin: false,\n  },\n  noIndex: 1,\n  expandRowByClick: false,\n  expandAccordion: false,\n  widthMode: {\n    type: 'default',\n    strictBehavior: 'truncate',\n  },\n  virtualItemSize: 54,\n  virtualMaxBufferPx: 200,\n  virtualMinBufferPx: 100,\n  iifBehavior: 'hide',\n  loadingDelay: 0,\n  safeType: 'text',\n};\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport { AlainConfigService, AlainSTConfig } from '@delon/util/config';\nimport { BooleanInput, InputBoolean, InputNumber, NumberInput, toBoolean } from '@delon/util/decorator';\nimport { deepCopy, deepMergeKey } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzContextMenuService, NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\nimport { NzResizeEvent } from 'ng-zorro-antd/resizable';\nimport { NzTableComponent, NzTableData } from 'ng-zorro-antd/table';\nimport { from, isObservable, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { STColumnSource } from './st-column-source';\nimport { STDataSource, STDataSourceOptions, STDataSourceResult } from './st-data-source';\nimport { STExport } from './st-export';\nimport { STRowSource } from './st-row.directive';\nimport { ST_DEFAULT_CONFIG } from './st.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu, STColumnSafeType,\n  STColumnSelection,\n  STContextmenuFn,\n  STContextmenuItem,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STResetColumnsOption,\n  STResizable,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './st.interfaces';\nimport {_STColumn, _STDataValue} from './st.types';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './st.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, DatePipe, YNPipe, DecimalPipe],\n  host: {\n    '[class.st]': `true`,\n    '[class.st__p-left]': `page.placement === 'left'`,\n    '[class.st__p-center]': `page.placement === 'center'`,\n    '[class.st__width-strict]': `widthMode.type === 'strict'`,\n    '[class.ant-table-rep]': `responsive`,\n    '[class.ant-table-rep__hide-header-footer]': `responsiveHideHeaderFooter`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_ps: NumberInput;\n  static ngAcceptInputType_pi: NumberInput;\n  static ngAcceptInputType_total: NumberInput;\n  static ngAcceptInputType_loadingDelay: NumberInput;\n  static ngAcceptInputType_bordered: BooleanInput;\n  static ngAcceptInputType_expandRowByClick: BooleanInput;\n  static ngAcceptInputType_expandAccordion: BooleanInput;\n  static ngAcceptInputType_rowClickTime: NumberInput;\n  static ngAcceptInputType_responsive: BooleanInput;\n  static ngAcceptInputType_responsiveHideHeaderFooter: BooleanInput;\n  static ngAcceptInputType_virtualScroll: BooleanInput;\n  static ngAcceptInputType_virtualItemSize: NumberInput;\n  static ngAcceptInputType_virtualMaxBufferPx: NumberInput;\n  static ngAcceptInputType_virtualMinBufferPx: NumberInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private cog: AlainSTConfig;\n  private rowClickCount = 0;\n  private _req: STReq;\n  private _res: STRes;\n  private _page: STPage;\n  private _widthMode: STWidthMode;\n  private customWidthConfig: boolean = false;\n  _widthConfig: string[] = [];\n  locale: LocaleData = {};\n  _loading = false;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _headers: _STColumn[][] = [];\n  _columns: _STColumn[] = [];\n  contextmenuList: STContextmenuItem[] = [];\n  @ViewChild('table') readonly orgTable: NzTableComponent;\n  @ViewChild('contextmenuTpl') readonly contextmenuTpl!: NzDropdownMenuComponent;\n\n  @Input()\n  get req(): STReq {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMergeKey({}, true, this.cog.req, value);\n  }\n  /** 返回体配置 */\n  @Input()\n  get res(): STRes {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = (this._res = deepMergeKey({}, true, this.cog.res, value));\n    const reName = item.reName!;\n    if (!Array.isArray(reName.list)) reName.list = reName.list!.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total!.split('.');\n    this._res = item;\n  }\n  @Input()\n  get page(): STPage {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this._page = { ...this.cog.page, ...value };\n    this.updateTotalTpl();\n  }\n  @Input() data: string | STData[] | Observable<STData[]>;\n  @Input() columns: STColumn[] = [];\n  @Input() contextmenu?: STContextmenuFn;\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  @Input() loading: boolean | null = null;\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  @Input() @InputBoolean() bordered = false;\n  @Input() size: 'small' | 'middle' | 'default';\n  @Input() scroll: { y?: string; x?: string };\n  @Input() singleSort: STSingleSort;\n  private _multiSort?: STMultiSort;\n  @Input()\n  get multiSort(): NzSafeAny {\n    return this._multiSort;\n  }\n  set multiSort(value: NzSafeAny) {\n    if ((typeof value === 'boolean' && !toBoolean(value)) || (typeof value === 'object' && Object.keys(value).length === 0)) {\n      this._multiSort = undefined;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { ...this.cog.widthMode, ...value };\n  }\n  get widthMode(): STWidthMode {\n    return this._widthMode;\n  }\n  @Input()\n  set widthConfig(val: string[]) {\n    this._widthConfig = val;\n    this.customWidthConfig = val && val.length > 0;\n  }\n  private _resizable: STResizable;\n  @Input()\n  set resizable(val: STResizable | boolean) {\n    this._resizable = typeof val === 'object' ? val : { disabled: !toBoolean(val) };\n  }\n  @Input() header: string | TemplateRef<void>;\n  @Input() @InputBoolean() showHeader = true;\n  @Input() footer: string | TemplateRef<void>;\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  @Output() readonly error = new EventEmitter<STError>();\n  @Output() readonly change = new EventEmitter<STChange>();\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private get routerState(): { pi: number; ps: number; total: number } {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private el: ElementRef,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n    configSrv: AlainConfigService,\n    private cms: NzContextMenuService,\n  ) {\n    this.setCog(configSrv.merge('st', ST_DEFAULT_CONFIG)!);\n\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.updateTotalTpl();\n        this.cd();\n      }\n    });\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  private setCog(cog: AlainSTConfig): void {\n    const copyMultiSort = { ...cog.multiSort };\n    // Because multiSort.global will affect the result, it should be removed first, and multiSort will be operated again after processing.\n    delete cog.multiSort;\n    this.cog = cog;\n    Object.assign(this, cog);\n\n    if (copyMultiSort.global !== false) {\n      this.multiSort = copyMultiSort;\n    }\n    this.columnSource.setCog(cog);\n  }\n\n  cd(): this {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]): string {\n    return this.totalTpl\n      ? this.totalTpl.replace('{{total}}', total).replace('{{range[0]}}', range[0]).replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  private changeEmit(type: STChangeType, data?: any): void {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * 获取过滤后所有数据\n   * - 本地数据：包含排序、过滤后不分页数据\n   * - 远程数据：不传递 `pi`、`ps` 两个参数\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private updateTotalTpl(): void {\n    const { total } = this.page;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n      this.cdr.detectChanges();\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => {\n            console.warn('st.loadDate', error);\n            rejectPromise(error);\n          },\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      // Should be re-render in next tike when using virtual scroll\n      // https://github.com/ng-alain/ng-alain/issues/1836\n      if (this.cdkVirtualScrollViewport) {\n        Promise.resolve().then(() => this.cdkVirtualScrollViewport.checkViewportSize());\n      }\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** 清空所有数据 */\n  clear(cleanStatus: boolean = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** 清空所有状态 */\n  clearStatus(): this {\n    return this.clearCheck().clearRadio().clearFilter().clearSort();\n  }\n\n  /**\n   * 根据页码重新加载数据\n   *\n   * @param pi 指定当前页码，默认：`1`\n   * @param extraParams 重新指定 `extraParams` 值\n   * @param options 选项\n   */\n  load(pi: number = 1, extraParams?: {}, options?: STLoadOptions): this {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this.req.params = options && options.merge ? { ...this.req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi', options);\n    return this;\n  }\n\n  /**\n   * 重新刷新当前页\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reload(extraParams?: {}, options?: STLoadOptions): this {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * 重置且重新设置 `pi` 为 `1`，包含以下值：\n   * - `check` 数据\n   * - `radio` 数据\n   * - `sort` 数据\n   * - `fileter` 数据\n   *\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reset(extraParams?: {}, options?: STLoadOptions): this {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop(enforce?: boolean): void {\n    if (!(enforce == null ? this.page.toTop : enforce)) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      if (this.cdkVirtualScrollViewport) {\n        this.cdkVirtualScrollViewport.scrollTo({\n          top: 0,\n          left: 0,\n        });\n      } else {\n        el.querySelector('.ant-table-body, .ant-table-content')?.scrollTo(0, 0);\n      }\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps', options?: STLoadOptions): void {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop(options?.toTop));\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn): boolean {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData): void {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number): void {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData, expand: boolean): void {\n    if (this.expandRowByClick) {\n      return;\n    }\n    item.expand = expand;\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  private refreshData(): this {\n    this._data = [...this._data];\n    return this.cd();\n  }\n\n  private _refColAndData(): this {\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c =>\n        this._data.forEach((i, idx) => {\n          const text = `${this.dataSource.getNoIndex(i, c, idx)}`;\n          i._values![c.__point!] = { text, _text: text, org: idx, safeType: 'text' } as _STDataValue;\n        })\n      );\n\n    return this.refreshData();\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number): this {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._refColAndData();\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * - `optinos.refreshSchema` Whether to refresh of st schemas\n   * - `optinos.emitReload` Whether to trigger a reload http request when data is url\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * this.st.setRow(item, { price: 100 })\n   * ```\n   */\n  setRow(index: number | STData, item: STData, options?: { refreshSchema?: boolean; emitReload?: boolean }): this {\n    options = { refreshSchema: false, emitReload: false, ...options };\n    if (typeof index !== 'number') {\n      index = this._data.indexOf(index);\n    }\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this.optimizeData();\n    if (options.refreshSchema) {\n      this.resetColumns({ emitReload: options.emitReload });\n      return this;\n    }\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: _STColumn, idx: number, value: any): void {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.cdr.detectChanges();\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort(): this {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn): void {\n    // 过滤表示一种数据的变化应重置页码为 `1`\n    this.pi = 1;\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: _STColumn): void {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: _STColumn, item: STColumnFilterMenu, checked: boolean): void {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: _STColumn): void {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter(): this {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  _filterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  // #endregion\n\n  // #region checkbox\n\n  /** 清除所有 `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean): this {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** 清除所有 `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event): void {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.cog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe((res: NzSafeAny) => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.cog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any): any {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton): string {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * 导出当前页，确保已经注册 `XlsxModule`\n   * @param newData 重新指定数据；若为 `true` 表示使用 `filteredData` 数据\n   * @param opt 额外参数\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions): void {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        data: res,\n        columens: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  // #region resizable\n\n  colResize({ width }: NzResizeEvent, column: _STColumn): void {\n    column.width = `${width}px`;\n    this.changeEmit('resize', column);\n  }\n\n  // #endregion\n\n  // #region contextmenu\n  onContextmenu(event: MouseEvent): void {\n    if (!this.contextmenu) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    const colEl = (event.target as HTMLElement).closest('[data-col-index]') as HTMLElement;\n    if (!colEl) {\n      return;\n    }\n    const colIndex = Number(colEl.dataset.colIndex);\n    const rowIndex = Number((colEl.closest('tr') as HTMLElement).dataset.index);\n    const isTitle = isNaN(rowIndex);\n    const obs$ = this.contextmenu({\n      event,\n      type: isTitle ? 'head' : 'body',\n      rowIndex: isTitle ? null : rowIndex,\n      colIndex,\n      data: isTitle ? null : this.list[rowIndex],\n      column: this._columns[colIndex],\n    });\n    (isObservable(obs$) ? obs$ : of(obs$))\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(res => res.length > 0),\n      )\n      .subscribe(res => {\n        this.contextmenuList = res.map(i => {\n          if (!Array.isArray(i.children)) {\n            i.children = [];\n          }\n          return i;\n        });\n        this.cdr.detectChanges();\n        this.cms.create(event, this.contextmenuTpl);\n      });\n  }\n  // #endregion\n\n  get cdkVirtualScrollViewport(): CdkVirtualScrollViewport {\n    return this.orgTable.cdkVirtualScrollViewport!;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, preClearData: false, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    if (options.emitReload) {\n      // Should clean data, Because of changing columns may cause inaccurate data\n      options.preClearData = true;\n    }\n    if (options.preClearData) {\n      this._data = [];\n    }\n    this.refreshColumns();\n    if (options.emitReload) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    const res = this.columnSource.process(this.columns as _STColumn[], {\n      widthMode: this.widthMode,\n      resizable: this._resizable,\n      safeType: this.cog.safeType as STColumnSafeType\n    });\n    this._columns = res.columns;\n    this._headers = res.headers;\n    if (this.customWidthConfig === false && res.headerWidths != null) {\n      this._widthConfig = res.headerWidths;\n    }\n    return this;\n  }\n\n  private optimizeData(): void {\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n  }\n\n  /**\n   * Return pure data, `st` internally maintains a set of data for caching, this part of data may affect the backend\n   *\n   * 返回纯净数据，`st` 内部会维护一组用于缓存的数据，这部分数据可能会影响后端\n   */\n  pureItem(itemOrIndex: STData | number): STData | null {\n    if (typeof itemOrIndex === 'number') {\n      itemOrIndex = this._data[itemOrIndex];\n    }\n    if (!itemOrIndex) {\n      return null;\n    }\n    const copyItem = deepCopy(itemOrIndex);\n    delete copyItem._values;\n    return copyItem;\n  }\n\n  ngAfterViewInit(): void {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns().optimizeData();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonACLModule } from '@delon/acl';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzResizableModule } from 'ng-zorro-antd/resizable';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { STRowDirective } from './st-row.directive';\nimport { STWidgetHostDirective } from './st-widget-host.directive';\nimport { STComponent } from './st.component';\n\nconst COMPONENTS = [STComponent];\nconst DIRECTIVES = [STRowDirective, STWidgetHostDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n    NzResizableModule,\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class STModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {STRowSource as ɵa} from './st-row.directive';"],"names":[],"mappings":"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"}