{"version":3,"file":"zip.umd.js","sources":["../../../../packages/abc/zip/zip.service.ts","../../../../packages/abc/zip/zip.module.ts","../../../../packages/abc/zip/zip.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\nimport { AlainConfigService, AlainZipConfig } from '@delon/util/config';\nimport { LazyResult, LazyService } from '@delon/util/other';\nimport { saveAs } from 'file-saver';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ZipSaveOptions } from './zip.types';\n\ndeclare var JSZip: any;\n\n@Injectable({ providedIn: 'root' })\nexport class ZipService {\n  private cog: AlainZipConfig;\n\n  constructor(private http: HttpClient, private lazy: LazyService, configSrv: AlainConfigService, private ngZone: NgZone) {\n    this.cog = configSrv.merge('zip', {\n      url: '//cdn.bootcss.com/jszip/3.3.0/jszip.min.js',\n      utils: [],\n    })!;\n  }\n\n  private init(): Promise<LazyResult[]> {\n    return this.lazy.load([this.cog.url!].concat(this.cog.utils!));\n  }\n\n  private check(zip: any): void {\n    if (!zip) throw new Error('get instance via `ZipService.create()`');\n  }\n\n  /** 解压 */\n  read(fileOrUrl: File | string, options?: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      const resolveCallback = (data: NzSafeAny) => {\n        this.ngZone.run(() => resolve(data));\n      };\n      this.init().then(() => {\n        this.ngZone.runOutsideAngular(() => {\n          // from url\n          if (typeof fileOrUrl === 'string') {\n            this.http.request('GET', fileOrUrl, { responseType: 'arraybuffer' }).subscribe(\n              (res: ArrayBuffer) => {\n                JSZip.loadAsync(res, options).then((ret: NzSafeAny) => resolveCallback(ret));\n              },\n              (err: any) => {\n                reject(err);\n              },\n            );\n            return;\n          }\n          // from file\n          const reader: FileReader = new FileReader();\n          reader.onload = (e: any) => {\n            JSZip.loadAsync(e.target.result, options).then((ret: NzSafeAny) => resolveCallback(ret));\n          };\n          reader.readAsBinaryString(fileOrUrl as File);\n        });\n      });\n    });\n  }\n\n  /** 创建 Zip 实例，用于创建压缩文件 */\n  create(): Promise<any> {\n    return new Promise<any>(resolve => {\n      this.init().then(() => {\n        const zipFile: any = new JSZip();\n        resolve(zipFile);\n      });\n    });\n  }\n\n  /**\n   * 下载URL资源并写入 zip\n   * @param zip Zip 实例\n   * @param path Zip 路径，例如： `text.txt`、`txt/hi.txt`\n   * @param url URL 地址\n   */\n  pushUrl(zip: any, path: string, url: string): Promise<void> {\n    this.check(zip);\n    return new Promise<void>((resolve, reject) => {\n      this.http.request('GET', url, { responseType: 'arraybuffer' }).subscribe(\n        (res: ArrayBuffer) => {\n          zip.file(path, res);\n          resolve();\n        },\n        (error: any) => {\n          reject({ url, error });\n        },\n      );\n    });\n  }\n\n  /**\n   * 保存Zip并执行打开保存对话框\n   *\n   * @param zip zip 对象，务必通过 `create()` 构建\n   * @param options 额外参数，\n   */\n  save(zip: any, options?: ZipSaveOptions): Promise<void> {\n    this.check(zip);\n    const opt = { ...options } as ZipSaveOptions;\n    return new Promise<void>((resolve, reject) => {\n      zip.generateAsync({ type: 'blob', ...opt.options }, opt.update).then(\n        (data: Blob) => {\n          if (opt.callback) opt.callback(data);\n          saveAs(data, opt.filename || 'download.zip');\n          resolve();\n        },\n        (err: NzSafeAny) => {\n          reject(err);\n        },\n      );\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class ZipModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["saveAs","Injectable","HttpClient","LazyService","AlainConfigService","NgZone","NgModule","CommonModule"],"mappings":"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"}