{"version":3,"file":"table.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../packages/abc/st/st-row.directive.ts","../../../../packages/abc/st/st-widget.ts","../../../../packages/abc/st/st-column-source.ts","../../../../packages/abc/st/st-data-source.ts","../../../../packages/abc/st/st-export.ts","../../../../packages/abc/st/st-widget-host.directive.ts","../../../../packages/abc/st/st.config.ts","../../../../packages/abc/st/st.component.ts","../../../../packages/abc/st/st.module.ts","../../../../packages/abc/st/table.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Directive, Host, Injectable, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class STRowSource {\n  private titles: { [key: string]: TemplateRef<void> } = {};\n  private rows: { [key: string]: TemplateRef<void> } = {};\n\n  add(type: string, path: string, ref: TemplateRef<void>): void {\n    this[type === 'title' ? 'titles' : 'rows'][path] = ref;\n  }\n\n  getTitle(path: string): TemplateRef<void> {\n    return this.titles[path];\n  }\n\n  getRow(path: string): TemplateRef<void> {\n    return this.rows[path];\n  }\n}\n\n@Directive({ selector: '[st-row]' })\nexport class STRowDirective implements OnInit {\n  @Input('st-row') id: string;\n\n  @Input() type: 'title';\n\n  constructor(private ref: TemplateRef<void>, @Host() private source: STRowSource) {}\n\n  ngOnInit(): void {\n    this.source.add(this.type, this.id, this.ref);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class STWidgetRegistry {\n  private _widgets: { [type: string]: any } = {};\n\n  get widgets(): any {\n    return this._widgets;\n  }\n\n  register(type: string, widget: any): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  get(type: string): any {\n    return this._widgets[type];\n  }\n}\n","import { Host, Inject, Injectable, Optional, TemplateRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ACLService } from '@delon/acl';\nimport { AlainI18NService, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { AlainSTConfig } from '@delon/util/config';\nimport { deepCopy, warn } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STRowSource } from './st-row.directive';\nimport { STWidgetRegistry } from './st-widget';\nimport {\n  STColumn,\n  STColumnButton,\n  STColumnButtonPop,\n  STColumnFilter,\n  STColumnGroupType, STColumnSafeType,\n  STIcon,\n  STResizable,\n  STSortMap,\n  STWidthMode,\n} from './st.interfaces';\nimport { _STColumn } from './st.types';\n\nexport interface STColumnSourceProcessOptions {\n  widthMode: STWidthMode;\n  resizable: STResizable;\n  safeType: STColumnSafeType;\n}\n\n@Injectable()\nexport class STColumnSource {\n  private cog: AlainSTConfig;\n\n  constructor(\n    private dom: DomSanitizer,\n    @Host() private rowSource: STRowSource,\n    @Optional() private acl: ACLService,\n    @Optional() @Inject(ALAIN_I18N_TOKEN) private i18nSrv: AlainI18NService,\n    private stWidgetRegistry: STWidgetRegistry,\n  ) {}\n\n  setCog(val: AlainSTConfig): void {\n    this.cog = val;\n  }\n\n  private fixPop(i: STColumnButton, def: STColumnButtonPop): void {\n    if (i.pop == null || i.pop === false) {\n      i.pop = false;\n      return;\n    }\n\n    let pop = {\n      ...def,\n    };\n    if (typeof i.pop === 'string') {\n      pop.title = i.pop;\n    } else if (typeof i.pop === 'object') {\n      pop = {\n        ...pop,\n        ...i.pop,\n      };\n    }\n\n    if (typeof pop.condition !== 'function') {\n      pop.condition = () => false;\n    }\n\n    i.pop = pop;\n  }\n\n  private btnCoerce(list: STColumnButton[]): STColumnButton[] {\n    if (!list) return [];\n    const ret: STColumnButton[] = [];\n    const { modal, drawer, pop, btnIcon } = this.cog;\n\n    for (const item of list) {\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n\n      if (item.type === 'modal' || item.type === 'static') {\n        if (item.modal == null || item.modal.component == null) {\n          console.warn(`[st] Should specify modal parameter when type is modal or static`);\n          item.type = 'none';\n        } else {\n          item.modal = { ...{ paramsName: 'record', size: 'lg' }, ...modal, ...item.modal };\n        }\n      }\n\n      if (item.type === 'drawer') {\n        if (item.drawer == null || item.drawer.component == null) {\n          console.warn(`[st] Should specify drawer parameter when type is drawer`);\n          item.type = 'none';\n        } else {\n          item.drawer = { ...{ paramsName: 'record', size: 'lg' }, ...drawer, ...item.drawer };\n        }\n      }\n\n      if (item.type === 'del' && typeof item.pop === 'undefined') {\n        item.pop = true;\n      }\n\n      // pop\n      this.fixPop(item, pop!);\n\n      if (item.icon) {\n        item.icon = {\n          ...btnIcon,\n          ...(typeof item.icon === 'string' ? { type: item.icon } : item.icon),\n        };\n      }\n\n      item.children = item.children && item.children.length > 0 ? this.btnCoerce(item.children) : [];\n\n      // i18n\n      if (item.i18n && this.i18nSrv) {\n        item.text = this.i18nSrv.fanyi(item.i18n);\n      }\n\n      ret.push(item);\n    }\n    this.btnCoerceIf(ret);\n    return ret;\n  }\n\n  private btnCoerceIf(list: STColumnButton[]): void {\n    for (const item of list) {\n      if (!item.iif) item.iif = () => true;\n      item.iifBehavior = item.iifBehavior || this.cog.iifBehavior;\n      if (item.children && item.children.length > 0) {\n        this.btnCoerceIf(item.children);\n      } else {\n        item.children = [];\n      }\n    }\n  }\n\n  private fixedCoerce(list: _STColumn[]): void {\n    const countReduce = (a: number, b: _STColumn) => a + +b.width!.toString().replace('px', '');\n    // left width\n    list\n      .filter(w => w.fixed && w.fixed === 'left' && w.width)\n      .forEach((item, idx) => (item._left = list.slice(0, idx).reduce(countReduce, 0) + 'px'));\n    // right width\n    list\n      .filter(w => w.fixed && w.fixed === 'right' && w.width)\n      .reverse()\n      .forEach((item, idx) => (item._right = (idx > 0 ? list.slice(-idx).reduce(countReduce, 0) : 0) + 'px'));\n  }\n\n  private sortCoerce(item: _STColumn): STSortMap {\n    const res = this.fixSortCoerce(item);\n    res.reName = {\n      ...this.cog.sortReName,\n      ...res.reName,\n    };\n    return res;\n  }\n\n  private fixSortCoerce(item: _STColumn): STSortMap {\n    if (typeof item.sort === 'undefined') {\n      return { enabled: false };\n    }\n\n    let res: STSortMap = {};\n\n    if (typeof item.sort === 'string') {\n      res.key = item.sort;\n    } else if (typeof item.sort !== 'boolean') {\n      res = item.sort;\n    } else if (typeof item.sort === 'boolean') {\n      res.compare = (a, b) => a[item.indexKey!] - b[item.indexKey!];\n    }\n\n    if (!res.key) {\n      res.key = item.indexKey;\n    }\n\n    res.enabled = true;\n\n    return res;\n  }\n\n  private filterCoerce(item: _STColumn): STColumnFilter | null {\n    if (item.filter == null) {\n      return null;\n    }\n\n    let res: STColumnFilter | null = item.filter;\n    res.type = res.type || 'default';\n\n    let icon = 'filter';\n    let iconTheme = 'fill';\n    if (res.type === 'keyword') {\n      if (res.menus == null || res.menus!.length === 0) {\n        res.menus = [{ value: '' }];\n      }\n      icon = 'search';\n      iconTheme = 'outline';\n    }\n\n    if (res.menus!.length === 0) {\n      return null;\n    }\n\n    if (typeof res.multiple === 'undefined') {\n      res.multiple = true;\n    }\n\n    res.confirmText = res.confirmText || this.cog.filterConfirmText;\n    res.clearText = res.clearText || this.cog.filterClearText;\n    res.key = res.key || item.indexKey;\n    res.icon = res.icon || icon;\n\n    const baseIcon = { type: icon, theme: iconTheme } as STIcon;\n    if (typeof res.icon === 'string') {\n      res.icon = { ...baseIcon, type: res.icon } as STIcon;\n    } else {\n      res.icon = { ...baseIcon, ...res.icon };\n    }\n\n    this.updateDefault(res);\n\n    if (this.acl) {\n      res.menus = res.menus!.filter(w => this.acl.can(w.acl!));\n    }\n\n    if (res.menus!.length <= 0) {\n      res = null;\n    }\n\n    return res;\n  }\n\n  private restoreRender(item: _STColumn): void {\n    if (item.renderTitle) {\n      item.__renderTitle =\n        typeof item.renderTitle === 'string' ? this.rowSource.getTitle(item.renderTitle) : (item.renderTitle as TemplateRef<void>);\n    }\n    if (item.render) {\n      item.__render = typeof item.render === 'string' ? this.rowSource.getRow(item.render) : (item.render as TemplateRef<void>);\n    }\n  }\n\n  private widgetCoerce(item: _STColumn): void {\n    if (item.type !== 'widget') return;\n    if (item.widget == null || !this.stWidgetRegistry.has(item.widget.type)) {\n      delete item.type;\n      warn(`st: No widget for type \"${item.widget?.type}\"`);\n    }\n  }\n\n  private genHeaders(rootColumns: _STColumn[]): { headers: _STColumn[][]; headerWidths: string[] | null } {\n    const rows: _STColumn[][] = [];\n    const widths: string[] = [];\n    const fillRowCells = (columns: _STColumn[], colIndex: number, rowIndex = 0): number[] => {\n      // Init rows\n      rows[rowIndex] = rows[rowIndex] || [];\n\n      let currentColIndex = colIndex;\n      const colSpans: number[] = columns.map(column => {\n        const cell: STColumnGroupType = {\n          column,\n          colStart: currentColIndex,\n          hasSubColumns: false,\n        };\n\n        let colSpan: number = 1;\n\n        const subColumns = column.children;\n        if (Array.isArray(subColumns) && subColumns.length > 0) {\n          colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n          cell.hasSubColumns = true;\n        } else {\n          widths.push((cell.column.width as string) || '');\n        }\n\n        if ('colSpan' in column) {\n          colSpan = column.colSpan!;\n        }\n\n        if ('rowSpan' in column) {\n          cell.rowSpan = column.rowSpan;\n        }\n\n        cell.colSpan = colSpan;\n        cell.colEnd = cell.colStart + colSpan - 1;\n        rows[rowIndex].push(cell as NzSafeAny);\n\n        currentColIndex += colSpan;\n\n        return colSpan;\n      });\n\n      return colSpans;\n    };\n\n    fillRowCells(rootColumns, 0);\n\n    // Handle `rowSpan`\n    const rowCount = rows.length;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      rows[rowIndex].forEach(cell => {\n        if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n          cell.rowSpan = rowCount - rowIndex;\n        }\n      });\n    }\n\n    return { headers: rows, headerWidths: rowCount > 1 ? widths : null };\n  }\n\n  private cleanCond(list: _STColumn[]): _STColumn[] {\n    const res: _STColumn[] = [];\n    const copyList = deepCopy(list);\n    for (const item of copyList) {\n      if (item.iif && !item.iif(item)) {\n        continue;\n      }\n      if (this.acl && item.acl && !this.acl.can(item.acl)) {\n        continue;\n      }\n      res.push(item);\n    }\n    return res;\n  }\n\n  process(\n    list: STColumn[],\n    options: STColumnSourceProcessOptions,\n  ): { columns: _STColumn[]; headers: _STColumn[][]; headerWidths: string[] | null } {\n    if (!list || list.length === 0) throw new Error(`[st]: the columns property muse be define!`);\n\n    const { noIndex } = this.cog;\n    let checkboxCount = 0;\n    let radioCount = 0;\n    let point = 0;\n    const columns: _STColumn[] = [];\n\n    const processItem = (item: _STColumn): _STColumn => {\n      // index\n      if (item.index) {\n        if (!Array.isArray(item.index)) {\n          item.index = item.index.split('.');\n        }\n        item.indexKey = item.index.join('.');\n      }\n\n      // #region title\n\n      const tit = (typeof item.title === 'string' ? { text: item.title } : item.title) || {};\n      if (tit.i18n && this.i18nSrv) {\n        tit.text = this.i18nSrv.fanyi(tit.i18n);\n      }\n      if (tit.text) {\n        tit._text = this.dom.bypassSecurityTrustHtml(tit.text);\n      }\n      item.title = tit;\n\n      // #endregion\n\n      // no\n      if (item.type === 'no') {\n        item.noIndex = item.noIndex == null ? noIndex : item.noIndex;\n      }\n      // checkbox\n      if (item.selections == null) {\n        item.selections = [];\n      }\n      if (item.type === 'checkbox') {\n        ++checkboxCount;\n        if (!item.width) {\n          item.width = `${item.selections.length > 0 ? 62 : 50}px`;\n        }\n      }\n      if (this.acl) {\n        item.selections = item.selections.filter(w => this.acl.can(w.acl!));\n      }\n      // radio\n      if (item.type === 'radio') {\n        ++radioCount;\n        item.selections = [];\n        if (!item.width) {\n          item.width = '50px';\n        }\n      }\n      // types\n      if (item.type === 'yn') {\n        item.yn = { truth: true, ...item.yn };\n      }\n      if (\n        (item.type === 'link' && typeof item.click !== 'function') ||\n        (item.type === 'badge' && item.badge == null) ||\n        (item.type === 'tag' && item.tag == null) ||\n        (item.type === 'enum' && item.enum == null)\n      ) {\n        item.type = '';\n      }\n      item._isTruncate = !!item.width && options.widthMode.strictBehavior === 'truncate' && item.type !== 'img';\n      // className\n      if (!item.className) {\n        item.className = ({\n          number: 'text-right',\n          currency: 'text-right',\n          date: 'text-center',\n        } as NzSafeAny)[item.type!];\n      }\n      item._className = item.className || (item._isTruncate ? 'text-truncate' : null);\n      // width\n      if (typeof item.width === 'number') {\n        item.width = `${item.width}px`;\n      }\n      item.safeType = item.safeType ?? options.safeType;\n\n      // sorter\n      item._sort = this.sortCoerce(item);\n      // filter\n      item.filter = this.filterCoerce(item) as STColumnFilter;\n      // buttons\n      item.buttons = this.btnCoerce(item.buttons!);\n      // widget\n      this.widgetCoerce(item);\n      // restore custom row\n      this.restoreRender(item);\n      // resizable\n      item.resizable = {\n        disabled: true,\n        bounds: 'window',\n        minWidth: 60,\n        maxWidth: 360,\n        preview: true,\n        ...options.resizable,\n        ...(typeof item.resizable === 'boolean' ? ({ disabled: !item.resizable } as STResizable) : item.resizable),\n      };\n\n      item.__point = point++;\n\n      return item;\n    };\n\n    const processList = (data: _STColumn[]): void => {\n      for (const item of data) {\n        columns.push(processItem(item));\n        if (Array.isArray(item.children)) {\n          processList(item.children);\n        }\n      }\n    };\n\n    const copyList = this.cleanCond(list as _STColumn[]);\n    processList(copyList);\n\n    if (checkboxCount > 1) {\n      throw new Error(`[st]: just only one column checkbox`);\n    }\n    if (radioCount > 1) {\n      throw new Error(`[st]: just only one column radio`);\n    }\n\n    this.fixedCoerce(columns as _STColumn[]);\n    return { columns: columns.filter(w => !Array.isArray(w.children) || w.children.length === 0), ...this.genHeaders(copyList) };\n  }\n\n  restoreAllRender(columns: _STColumn[]): void {\n    columns.forEach(i => this.restoreRender(i));\n  }\n\n  updateDefault(filter: STColumnFilter): this {\n    if (filter.type === 'default') {\n      filter.default = filter.menus!.findIndex(w => w.checked!) !== -1;\n    } else {\n      filter.default = !!filter.menus![0].value;\n    }\n    return this;\n  }\n\n  cleanFilter(col: _STColumn): this {\n    const f = col.filter!;\n    f.default = false;\n    if (f.type === 'default') {\n      f.menus!.forEach(i => (i.checked = false));\n    } else {\n      f.menus![0].value = undefined;\n    }\n    return this;\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Host, Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DatePipe, YNPipe, _HttpClient } from '@delon/theme';\nimport { CurrencyService } from '@delon/util/format';\nimport { deepCopy, deepGet } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  STColumnFilter,\n  STColumnFilterMenu,\n  STData,\n  STMultiSort,\n  STMultiSortResultType,\n  STPage,\n  STReq,\n  STReqReNameType,\n  STRequestOptions,\n  STRes,\n  STRowClassName,\n  STSingleSort,\n  STSortMap,\n  STStatistical,\n  STStatisticalResult,\n  STStatisticalResults,\n  STStatisticalType,\n} from './st.interfaces';\nimport {_STColumn, _STDataValue} from './st.types';\n\nexport interface STDataSourceOptions {\n  pi: number;\n  ps: number;\n  paginator: boolean;\n  data: string | STData[] | Observable<STData[]>;\n  total: number;\n  req: STReq;\n  res: STRes;\n  page: STPage;\n  columns: _STColumn[];\n  singleSort?: STSingleSort;\n  multiSort?: STMultiSort;\n  rowClassName?: STRowClassName;\n}\n\nexport interface STDataSourceResult {\n  /** 是否需要显示分页器 */\n  pageShow: boolean;\n  /** 新 `pi`，若返回 `undefined` 表示用户受控 */\n  pi: number;\n  /** 新 `ps`，若返回 `undefined` 表示用户受控 */\n  ps: number;\n  /** 新 `total`，若返回 `undefined` 表示用户受控 */\n  total: number;\n  /** 数据 */\n  list: STData[];\n  /** 统计数据 */\n  statistical: STStatisticalResults;\n}\n\n@Injectable()\nexport class STDataSource {\n  private sortTick = 0;\n\n  constructor(\n    private http: _HttpClient,\n    @Host() private datePipe: DatePipe,\n    @Host() private ynPipe: YNPipe,\n    @Host() private numberPipe: DecimalPipe,\n    private currencySrv: CurrencyService,\n    private dom: DomSanitizer,\n  ) {}\n\n  process(options: STDataSourceOptions): Observable<STDataSourceResult> {\n    let data$: Observable<STData[]>;\n    let isRemote = false;\n    const { data, res, total, page, pi, ps, paginator, columns } = options;\n    let retTotal: number;\n    let retPs: number;\n    let retList: STData[];\n    let retPi: number;\n    let rawData: any;\n    let showPage = page.show;\n\n    if (typeof data === 'string') {\n      isRemote = true;\n      data$ = this.getByHttp(data, options).pipe(\n        map(result => {\n          rawData = result;\n          let ret: STData[];\n          if (Array.isArray(result)) {\n            ret = result;\n            retTotal = ret.length;\n            retPs = retTotal;\n            showPage = false;\n          } else {\n            // list\n            ret = deepGet(result, res.reName!.list as string[], []);\n            if (ret == null || !Array.isArray(ret)) {\n              ret = [];\n            }\n            // total\n            const resultTotal = res.reName!.total && deepGet(result, res.reName!.total as string[], null);\n            retTotal = resultTotal == null ? total || 0 : +resultTotal;\n          }\n          return deepCopy(ret);\n        }),\n      );\n    } else if (Array.isArray(data)) {\n      data$ = of(data);\n    } else {\n      // a cold observable\n      data$ = data;\n    }\n\n    if (!isRemote) {\n      data$ = data$.pipe(\n        // sort\n        map((result: STData[]) => {\n          rawData = result;\n          let copyResult = deepCopy(result);\n          const sorterFn = this.getSorterFn(columns as _STColumn[]);\n          if (sorterFn) {\n            copyResult = copyResult.sort(sorterFn);\n          }\n          return copyResult;\n        }),\n        // filter\n        map((result: STData[]) => {\n          columns\n            .filter(w => w.filter)\n            .forEach(c => {\n              const filter = c.filter!;\n              const values = this.getFilteredData(filter);\n              if (values.length === 0) return;\n              const onFilter = filter.fn;\n              if (typeof onFilter !== 'function') {\n                console.warn(`[st] Muse provide the fn function in filter`);\n                return;\n              }\n              result = result.filter(record => values.some(v => onFilter(v, record)));\n            });\n          return result;\n        }),\n        // paging\n        map((result: STData[]) => {\n          if (paginator && page.front) {\n            const maxPageIndex = Math.ceil(result.length / ps);\n            retPi = Math.max(1, pi > maxPageIndex ? maxPageIndex : pi);\n            retTotal = result.length;\n            if (page.show === true) {\n              return result.slice((retPi - 1) * ps, retPi * ps);\n            }\n          }\n          return result;\n        }),\n      );\n    }\n\n    // pre-process\n    if (typeof res.process === 'function') {\n      data$ = data$.pipe(map(result => res.process!(result, rawData)));\n    }\n\n    data$ = data$.pipe(map(result => this.optimizeData({ result, columns, rowClassName: options.rowClassName })));\n\n    return data$.pipe(\n      map(result => {\n        retList = result;\n        const realTotal = retTotal || total;\n        const realPs = retPs || ps;\n\n        return {\n          pi: retPi,\n          ps: retPs,\n          total: retTotal,\n          list: retList,\n          statistical: this.genStatistical(columns as _STColumn[], retList, rawData),\n          pageShow: typeof showPage === 'undefined' ? realTotal > realPs : showPage,\n        } as STDataSourceResult;\n      }),\n    );\n  }\n\n  private get(item: STData, col: _STColumn, idx: number): _STDataValue {\n    try {\n      const safeHtml = col.safeType === 'safeHtml';\n      if (col.format) {\n        const formatRes = col.format(item, col, idx) || '';\n        return {\n          text: formatRes,\n          _text: safeHtml ? this.dom.bypassSecurityTrustHtml(formatRes) : formatRes,\n          org: formatRes,\n          safeType: col.safeType!\n        };\n      }\n\n      const value = deepGet(item, col.index as string[], col.default);\n\n      let text = value;\n      let color: string | undefined;\n      switch (col.type) {\n        case 'no':\n          text = this.getNoIndex(item, col, idx);\n          break;\n        case 'img':\n          text = value ? `<img src=\"${value}\" class=\"img\">` : '';\n          break;\n        case 'number':\n          text = this.numberPipe.transform(value, col.numberDigits);\n          break;\n        case 'currency':\n          text = this.currencySrv.format(value, col.currency?.format);\n          break;\n        case 'date':\n          text = value === col.default ? col.default : this.datePipe.transform(value, col.dateFormat);\n          break;\n        case 'yn':\n          text = this.ynPipe.transform(value === col.yn!.truth, col.yn!.yes!, col.yn!.no!, col.yn!.mode!, false);\n          break;\n        case 'enum':\n          text = col.enum![value];\n          break;\n        case 'tag':\n        case 'badge':\n          const data = col.type === 'tag' ? col.tag : col.badge;\n          if (data && data[text]) {\n            const dataItem = data[text];\n            text = dataItem.text;\n            color = dataItem.color;\n          } else {\n            text = '';\n          }\n          break;\n      }\n      if (text == null) text = '';\n      return {\n        text,\n        _text: safeHtml ? this.dom.bypassSecurityTrustHtml(text) : text,\n        org: value,\n        color,\n        safeType: col.safeType!,\n        buttons: []\n      };\n    } catch (ex) {\n      const text = `INVALID DATA`;\n      console.error(`Failed to get data`, item, col, ex);\n      return { text, _text: text, org: text, buttons: [], safeType: 'text' };\n    }\n  }\n\n  private getByHttp(url: string, options: STDataSourceOptions): Observable<{}> {\n    const { req, page, paginator, pi, ps, singleSort, multiSort, columns } = options;\n    const method = (req.method || 'GET').toUpperCase();\n    let params = {};\n    const reName = req.reName as STReqReNameType;\n    if (paginator) {\n      if (req.type === 'page') {\n        params = {\n          [reName.pi as string]: page.zeroIndexed ? pi - 1 : pi,\n          [reName.ps as string]: ps,\n        };\n      } else {\n        params = {\n          [reName.skip as string]: (pi - 1) * ps,\n          [reName.limit as string]: ps,\n        };\n      }\n    }\n    params = {\n      ...params,\n      ...req.params,\n      ...this.getReqSortMap(singleSort, multiSort, columns),\n      ...this.getReqFilterMap(columns),\n    };\n\n    let reqOptions: STRequestOptions = {\n      params,\n      body: req.body,\n      headers: req.headers,\n    };\n    if (method === 'POST' && req.allInBody === true) {\n      reqOptions = {\n        body: { ...req.body, ...params },\n        headers: req.headers,\n      };\n    }\n    if (typeof req.process === 'function') {\n      reqOptions = req.process(reqOptions);\n    }\n    if (!(reqOptions.params instanceof HttpParams)) {\n      reqOptions.params = new HttpParams({ fromObject: reqOptions.params });\n    }\n    return this.http.request(method, url, reqOptions);\n  }\n\n  optimizeData(options: { columns: _STColumn[]; result: STData[]; rowClassName?: STRowClassName }): STData[] {\n    const { result, columns, rowClassName } = options;\n    for (let i = 0, len = result.length; i < len; i++) {\n      result[i]._values = columns.map(c => this.get(result[i], c, i));\n      if (rowClassName) {\n        result[i]._rowClassName = rowClassName(result[i], i);\n      }\n    }\n    return result;\n  }\n\n  getNoIndex(item: STData, col: _STColumn, idx: number): number {\n    return typeof col.noIndex === 'function' ? col.noIndex(item, col, idx) : col.noIndex! + idx;\n  }\n\n  // #region sort\n\n  private getValidSort(columns: _STColumn[]): STSortMap[] {\n    return columns.filter(item => item._sort && item._sort.enabled && item._sort.default).map(item => item._sort!);\n  }\n\n  private getSorterFn(columns: _STColumn[]): ((a: STData, b: STData) => number) | void {\n    const sortList = this.getValidSort(columns);\n    if (sortList.length === 0) {\n      return;\n    }\n    const sortItem = sortList[0];\n    if (sortItem.compare === null) {\n      return;\n    }\n    if (typeof sortItem.compare !== 'function') {\n      console.warn(`[st] Muse provide the compare function in sort`);\n      return;\n    }\n\n    return (a: STData, b: STData) => {\n      const result = sortItem.compare!(a, b);\n      if (result !== 0) {\n        return sortItem.default === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  get nextSortTick(): number {\n    return ++this.sortTick;\n  }\n\n  getReqSortMap(singleSort: STSingleSort | undefined, multiSort: STMultiSort | undefined, columns: _STColumn[]): STMultiSortResultType {\n    let ret: STMultiSortResultType = {};\n    const sortList = this.getValidSort(columns);\n\n    if (multiSort) {\n      const ms: STMultiSort = {\n        key: 'sort',\n        separator: '-',\n        nameSeparator: '.',\n        keepEmptyKey: true,\n        arrayParam: false,\n        ...multiSort,\n      };\n\n      const sortMap = sortList\n        .sort((a, b) => a.tick - b.tick)\n        .map(item => item.key! + ms.nameSeparator + ((item.reName || {})[item.default!] || item.default));\n\n      ret = { [ms.key!]: ms.arrayParam ? sortMap : sortMap.join(ms.separator) };\n\n      return sortMap.length === 0 && ms.keepEmptyKey === false ? {} : ret;\n    }\n\n    if (sortList.length === 0) return ret;\n\n    const mapData = sortList[0];\n    let sortFiled = mapData.key;\n    let sortValue = (sortList[0].reName || {})[mapData.default!] || mapData.default;\n    if (singleSort) {\n      sortValue = sortFiled + (singleSort.nameSeparator || '.') + sortValue;\n      sortFiled = singleSort.key || 'sort';\n    }\n    ret[sortFiled as string] = sortValue as string;\n    return ret;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private getFilteredData(filter: STColumnFilter): STColumnFilterMenu[] {\n    return filter.type === 'default' ? filter.menus!.filter(f => f.checked === true) : filter.menus!.slice(0, 1);\n  }\n\n  private getReqFilterMap(columns: _STColumn[]): { [key: string]: string } {\n    let ret = {};\n    columns\n      .filter(w => w.filter && w.filter.default === true)\n      .forEach(col => {\n        const filter = col.filter!;\n        const values = this.getFilteredData(filter);\n        let obj: { [key: string]: NzSafeAny } = {};\n        if (filter.reName) {\n          obj = filter.reName!(filter.menus!, col);\n        } else {\n          obj[filter.key!] = values.map(i => i.value).join(',');\n        }\n        ret = { ...ret, ...obj };\n      });\n    return ret;\n  }\n\n  // #endregion\n\n  // #region statistical\n\n  private genStatistical(columns: _STColumn[], list: STData[], rawData: any): STStatisticalResults {\n    const res: { [key: string]: NzSafeAny } = {};\n    columns.forEach((col, index) => {\n      res[col.key || col.indexKey || index] = col.statistical == null ? {} : this.getStatistical(col, index, list, rawData);\n    });\n    return res;\n  }\n\n  private getStatistical(col: _STColumn, index: number, list: STData[], rawData: any): STStatisticalResult {\n    const val = col.statistical;\n    const item: STStatistical = {\n      digits: 2,\n      currency: undefined,\n      ...(typeof val === 'string' ? { type: val as STStatisticalType } : (val as STStatistical)),\n    };\n    let res: STStatisticalResult = { value: 0 };\n    let currency = false;\n    if (typeof item.type === 'function') {\n      res = item.type(this.getValues(index, list), col, list, rawData);\n      currency = true;\n    } else {\n      switch (item.type) {\n        case 'count':\n          res.value = list.length;\n          break;\n        case 'distinctCount':\n          res.value = this.getValues(index, list).filter((value, idx, self) => self.indexOf(value) === idx).length;\n          break;\n        case 'sum':\n          res.value = this.toFixed(this.getSum(index, list), item.digits!);\n          currency = true;\n          break;\n        case 'average':\n          res.value = this.toFixed(this.getSum(index, list) / list.length, item.digits!);\n          currency = true;\n          break;\n        case 'max':\n          res.value = Math.max(...this.getValues(index, list));\n          currency = true;\n          break;\n        case 'min':\n          res.value = Math.min(...this.getValues(index, list));\n          currency = true;\n          break;\n      }\n    }\n    if (item.currency === true || (item.currency == null && currency === true)) {\n      res.text = this.currencySrv.format(res.value, col.currency?.format) as string;\n    } else {\n      res.text = String(res.value);\n    }\n    return res;\n  }\n\n  private toFixed(val: number, digits: number): number {\n    if (isNaN(val) || !isFinite(val)) {\n      return 0;\n    }\n    return parseFloat(val.toFixed(digits));\n  }\n\n  private getValues(index: number, list: STData[]): number[] {\n    return list.map(i => i._values[index].org).map(i => (i === '' || i == null ? 0 : i));\n  }\n\n  private getSum(index: number, list: STData[]): number {\n    return this.getValues(index, list).reduce((p, i) => (p += parseFloat(String(i))), 0);\n  }\n\n  // #endregion\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { XlsxExportResult, XlsxService } from '@delon/abc/xlsx';\nimport { deepGet } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { STColumn, STExportOptions } from './st.interfaces';\n\n@Injectable()\nexport class STExport {\n  constructor(@Optional() private xlsxSrv: XlsxService) {}\n\n  private _stGet(item: any, col: STColumn, index: number): any {\n    const ret: { [key: string]: any } = { t: 's', v: '' };\n\n    if (col.format) {\n      ret.v = col.format(item, col, index);\n    } else {\n      const val = deepGet(item, col.index as string[], '');\n      ret.v = val;\n      if (val != null) {\n        switch (col.type) {\n          case 'currency':\n            ret.t = 'n';\n            break;\n          case 'date':\n            ret.t = 'd';\n            break;\n          case 'yn':\n            const yn = col.yn!;\n            ret.v = ret.v === yn.truth ? yn.yes || '是' : yn.no || '否';\n            break;\n        }\n      }\n    }\n\n    ret.v = ret.v || '';\n\n    return ret;\n  }\n\n  private genSheet(opt: STExportOptions): { [sheet: string]: {} } {\n    const sheets: { [sheet: string]: { [key: string]: NzSafeAny } } = {};\n    const sheet: { [key: string]: NzSafeAny } = (sheets[opt.sheetname || 'Sheet1'] = {});\n    const colData = opt.columens!.filter(w => w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0));\n    const colLen = colData.length;\n    const dataLen = opt.data!.length;\n\n    // column\n    for (let i = 0; i < colLen; i++) {\n      const tit = colData[i].title;\n      sheet[`${this.xlsxSrv.numberToSchema(i + 1)}1`] = {\n        t: 's',\n        v: typeof tit === 'object' ? tit.text : tit,\n      };\n    }\n\n    // content\n    for (let i = 0; i < dataLen; i++) {\n      for (let j = 0; j < colLen; j++) {\n        sheet[`${this.xlsxSrv.numberToSchema(j + 1)}${i + 2}`] = this._stGet(opt.data![i], colData[j], i);\n      }\n    }\n\n    if (colLen > 0 && dataLen > 0) {\n      sheet['!ref'] = `A1:${this.xlsxSrv.numberToSchema(colLen)}${dataLen + 1}`;\n    }\n\n    return sheets;\n  }\n\n  async export(opt: STExportOptions): Promise<XlsxExportResult> {\n    const sheets = this.genSheet(opt);\n    return this.xlsxSrv.export({\n      sheets,\n      filename: opt.filename,\n      callback: opt.callback,\n    });\n  }\n}\n","import { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { STWidgetRegistry } from './st-widget';\nimport { STColumn, STData } from './st.interfaces';\n\n@Directive({ selector: '[st-widget-host]' })\nexport class STWidgetHostDirective implements OnInit {\n  @Input() record: STData;\n  @Input() column: STColumn;\n\n  constructor(\n    private stWidgetRegistry: STWidgetRegistry,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    const widget = this.column.widget!;\n    const componentType = this.stWidgetRegistry.get(widget.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType as any);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const { record, column } = this;\n    const data: { [key: string]: any } = widget.params ? widget.params({ record, column }) : { record };\n    Object.keys(data).forEach(key => {\n      (componentRef.instance as any)[key] = data[key];\n    });\n  }\n}\n","import { AlainSTConfig } from '@delon/util';\n\nexport const ST_DEFAULT_CONFIG: AlainSTConfig = {\n  pi: 1,\n  ps: 10,\n  size: 'default',\n  responsive: true,\n  responsiveHideHeaderFooter: false,\n  req: {\n    type: 'page',\n    method: 'GET',\n    allInBody: false,\n    lazyLoad: false,\n    reName: { pi: 'pi', ps: 'ps', skip: 'skip', limit: 'limit' },\n  },\n  res: {\n    reName: { list: ['list'], total: ['total'] },\n  },\n  page: {\n    front: true,\n    zeroIndexed: false,\n    position: 'bottom',\n    placement: 'right',\n    show: true,\n    showSize: false,\n    pageSizes: [10, 20, 30, 40, 50],\n    showQuickJumper: false,\n    total: true,\n    toTop: true,\n    toTopOffset: 100,\n    itemRender: null,\n    simple: false,\n  },\n  modal: {\n    paramsName: 'record',\n    size: 'lg',\n    exact: true,\n  },\n  drawer: {\n    paramsName: 'record',\n    size: 'md',\n    footer: true,\n    footerHeight: 55,\n  },\n  pop: {\n    title: '确认删除吗？',\n    trigger: 'click',\n    placement: 'top',\n  },\n  rowClickTime: 200,\n  btnIcon: {\n    theme: 'outline',\n    spin: false,\n  },\n  noIndex: 1,\n  expandRowByClick: false,\n  expandAccordion: false,\n  widthMode: {\n    type: 'default',\n    strictBehavior: 'truncate',\n  },\n  virtualItemSize: 54,\n  virtualMaxBufferPx: 200,\n  virtualMinBufferPx: 100,\n  iifBehavior: 'hide',\n  loadingDelay: 0,\n  safeType: 'text',\n};\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { DecimalPipe, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlainI18NService,\n  ALAIN_I18N_TOKEN,\n  DatePipe,\n  DelonLocaleService,\n  DrawerHelper,\n  LocaleData,\n  ModalHelper,\n  YNPipe,\n} from '@delon/theme';\nimport { AlainConfigService, AlainSTConfig } from '@delon/util/config';\nimport { BooleanInput, InputBoolean, InputNumber, NumberInput, toBoolean } from '@delon/util/decorator';\nimport { deepCopy, deepMergeKey } from '@delon/util/other';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzContextMenuService, NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\nimport { NzResizeEvent } from 'ng-zorro-antd/resizable';\nimport { NzTableComponent, NzTableData } from 'ng-zorro-antd/table';\nimport { from, isObservable, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { STColumnSource } from './st-column-source';\nimport { STDataSource, STDataSourceOptions, STDataSourceResult } from './st-data-source';\nimport { STExport } from './st-export';\nimport { STRowSource } from './st-row.directive';\nimport { ST_DEFAULT_CONFIG } from './st.config';\nimport {\n  STChange,\n  STChangeType,\n  STColumn,\n  STColumnButton,\n  STColumnFilterMenu, STColumnSafeType,\n  STColumnSelection,\n  STContextmenuFn,\n  STContextmenuItem,\n  STData,\n  STError,\n  STExportOptions,\n  STLoadOptions,\n  STMultiSort,\n  STPage,\n  STReq,\n  STRes,\n  STResetColumnsOption,\n  STResizable,\n  STRowClassName,\n  STSingleSort,\n  STStatisticalResults,\n  STWidthMode,\n} from './st.interfaces';\nimport {_STColumn, _STDataValue} from './st.types';\n\n@Component({\n  selector: 'st',\n  exportAs: 'st',\n  templateUrl: './st.component.html',\n  providers: [STDataSource, STRowSource, STColumnSource, STExport, DatePipe, YNPipe, DecimalPipe],\n  host: {\n    '[class.st]': `true`,\n    '[class.st__p-left]': `page.placement === 'left'`,\n    '[class.st__p-center]': `page.placement === 'center'`,\n    '[class.st__width-strict]': `widthMode.type === 'strict'`,\n    '[class.ant-table-rep]': `responsive`,\n    '[class.ant-table-rep__hide-header-footer]': `responsiveHideHeaderFooter`,\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class STComponent implements AfterViewInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_ps: NumberInput;\n  static ngAcceptInputType_pi: NumberInput;\n  static ngAcceptInputType_total: NumberInput;\n  static ngAcceptInputType_loadingDelay: NumberInput;\n  static ngAcceptInputType_bordered: BooleanInput;\n  static ngAcceptInputType_expandRowByClick: BooleanInput;\n  static ngAcceptInputType_expandAccordion: BooleanInput;\n  static ngAcceptInputType_rowClickTime: NumberInput;\n  static ngAcceptInputType_responsive: BooleanInput;\n  static ngAcceptInputType_responsiveHideHeaderFooter: BooleanInput;\n  static ngAcceptInputType_virtualScroll: BooleanInput;\n  static ngAcceptInputType_virtualItemSize: NumberInput;\n  static ngAcceptInputType_virtualMaxBufferPx: NumberInput;\n  static ngAcceptInputType_virtualMinBufferPx: NumberInput;\n\n  private unsubscribe$ = new Subject<void>();\n  private data$: Subscription;\n  private totalTpl = ``;\n  private cog: AlainSTConfig;\n  private rowClickCount = 0;\n  private _req: STReq;\n  private _res: STRes;\n  private _page: STPage;\n  private _widthMode: STWidthMode;\n  private customWidthConfig: boolean = false;\n  _widthConfig: string[] = [];\n  locale: LocaleData = {};\n  _loading = false;\n  _data: STData[] = [];\n  _statistical: STStatisticalResults = {};\n  _isPagination = true;\n  _allChecked = false;\n  _allCheckedDisabled = false;\n  _indeterminate = false;\n  _headers: _STColumn[][] = [];\n  _columns: _STColumn[] = [];\n  contextmenuList: STContextmenuItem[] = [];\n  @ViewChild('table') readonly orgTable: NzTableComponent;\n  @ViewChild('contextmenuTpl') readonly contextmenuTpl!: NzDropdownMenuComponent;\n\n  @Input()\n  get req(): STReq {\n    return this._req;\n  }\n  set req(value: STReq) {\n    this._req = deepMergeKey({}, true, this.cog.req, value);\n  }\n  /** 返回体配置 */\n  @Input()\n  get res(): STRes {\n    return this._res;\n  }\n  set res(value: STRes) {\n    const item = (this._res = deepMergeKey({}, true, this.cog.res, value));\n    const reName = item.reName!;\n    if (!Array.isArray(reName.list)) reName.list = reName.list!.split('.');\n    if (!Array.isArray(reName.total)) reName.total = reName.total!.split('.');\n    this._res = item;\n  }\n  @Input()\n  get page(): STPage {\n    return this._page;\n  }\n  set page(value: STPage) {\n    this._page = { ...this.cog.page, ...value };\n    this.updateTotalTpl();\n  }\n  @Input() data: string | STData[] | Observable<STData[]>;\n  @Input() columns: STColumn[] = [];\n  @Input() contextmenu?: STContextmenuFn;\n  @Input() @InputNumber() ps = 10;\n  @Input() @InputNumber() pi = 1;\n  @Input() @InputNumber() total = 0;\n  @Input() loading: boolean | null = null;\n  @Input() @InputNumber() loadingDelay = 0;\n  @Input() loadingIndicator: TemplateRef<void>;\n  @Input() @InputBoolean() bordered = false;\n  @Input() size: 'small' | 'middle' | 'default';\n  @Input() scroll: { y?: string; x?: string };\n  @Input() singleSort: STSingleSort;\n  private _multiSort?: STMultiSort;\n  @Input()\n  get multiSort(): NzSafeAny {\n    return this._multiSort;\n  }\n  set multiSort(value: NzSafeAny) {\n    if ((typeof value === 'boolean' && !toBoolean(value)) || (typeof value === 'object' && Object.keys(value).length === 0)) {\n      this._multiSort = undefined;\n      return;\n    }\n    this._multiSort = {\n      ...(typeof value === 'object' ? value : {}),\n    };\n  }\n  @Input() rowClassName: STRowClassName;\n  @Input()\n  set widthMode(value: STWidthMode) {\n    this._widthMode = { ...this.cog.widthMode, ...value };\n  }\n  get widthMode(): STWidthMode {\n    return this._widthMode;\n  }\n  @Input()\n  set widthConfig(val: string[]) {\n    this._widthConfig = val;\n    this.customWidthConfig = val && val.length > 0;\n  }\n  private _resizable: STResizable;\n  @Input()\n  set resizable(val: STResizable | boolean) {\n    this._resizable = typeof val === 'object' ? val : { disabled: !toBoolean(val) };\n  }\n  @Input() header: string | TemplateRef<void>;\n  @Input() @InputBoolean() showHeader = true;\n  @Input() footer: string | TemplateRef<void>;\n  @Input() bodyHeader: TemplateRef<STStatisticalResults>;\n  @Input() body: TemplateRef<STStatisticalResults>;\n  @Input() @InputBoolean() expandRowByClick = false;\n  @Input() @InputBoolean() expandAccordion = false;\n  @Input() expand: TemplateRef<{ $implicit: {}; column: STColumn }>;\n  @Input() noResult: string | TemplateRef<void>;\n  @Input() @InputNumber() rowClickTime = 200;\n  @Input() @InputBoolean() responsive: boolean = true;\n  @Input() @InputBoolean() responsiveHideHeaderFooter: boolean;\n  @Output() readonly error = new EventEmitter<STError>();\n  @Output() readonly change = new EventEmitter<STChange>();\n  @Input() @InputBoolean() virtualScroll = false;\n  @Input() @InputNumber() virtualItemSize = 54;\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\n  @Input() @InputNumber() virtualMinBufferPx = 100;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n\n  /**\n   * Get the number of the current page\n   */\n  get count(): number {\n    return this._data.length;\n  }\n\n  /**\n   * Get the data of the current page\n   */\n  get list(): STData[] {\n    return this._data;\n  }\n\n  private get routerState(): { pi: number; ps: number; total: number } {\n    const { pi, ps, total } = this;\n    return { pi, ps, total };\n  }\n\n  constructor(\n    @Optional() @Inject(ALAIN_I18N_TOKEN) i18nSrv: AlainI18NService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private el: ElementRef,\n    private exportSrv: STExport,\n    private modalHelper: ModalHelper,\n    private drawerHelper: DrawerHelper,\n    @Inject(DOCUMENT) private doc: any,\n    private columnSource: STColumnSource,\n    private dataSource: STDataSource,\n    private delonI18n: DelonLocaleService,\n    configSrv: AlainConfigService,\n    private cms: NzContextMenuService,\n  ) {\n    this.setCog(configSrv.merge('st', ST_DEFAULT_CONFIG)!);\n\n    this.delonI18n.change.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.delonI18n.getData('st');\n      if (this._columns.length > 0) {\n        this.updateTotalTpl();\n        this.cd();\n      }\n    });\n\n    i18nSrv.change\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(() => this._columns.length > 0),\n      )\n      .subscribe(() => this.refreshColumns());\n  }\n\n  private setCog(cog: AlainSTConfig): void {\n    const copyMultiSort = { ...cog.multiSort };\n    // Because multiSort.global will affect the result, it should be removed first, and multiSort will be operated again after processing.\n    delete cog.multiSort;\n    this.cog = cog;\n    Object.assign(this, cog);\n\n    if (copyMultiSort.global !== false) {\n      this.multiSort = copyMultiSort;\n    }\n    this.columnSource.setCog(cog);\n  }\n\n  cd(): this {\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  renderTotal(total: string, range: string[]): string {\n    return this.totalTpl\n      ? this.totalTpl.replace('{{total}}', total).replace('{{range[0]}}', range[0]).replace('{{range[1]}}', range[1])\n      : '';\n  }\n\n  private changeEmit(type: STChangeType, data?: any): void {\n    const res: STChange = {\n      type,\n      pi: this.pi,\n      ps: this.ps,\n      total: this.total,\n    };\n    if (data != null) {\n      res[type] = data;\n    }\n    this.change.emit(res);\n  }\n\n  // #region data\n\n  /**\n   * 获取过滤后所有数据\n   * - 本地数据：包含排序、过滤后不分页数据\n   * - 远程数据：不传递 `pi`、`ps` 两个参数\n   */\n  get filteredData(): Promise<STData[]> {\n    return this.loadData({ paginator: false } as any).then(res => res.list);\n  }\n\n  private updateTotalTpl(): void {\n    const { total } = this.page;\n    if (typeof total === 'string' && total.length) {\n      this.totalTpl = total;\n    } else if (toBoolean(total)) {\n      this.totalTpl = this.locale.total;\n    } else {\n      this.totalTpl = '';\n    }\n  }\n\n  private setLoading(val: boolean): void {\n    if (this.loading == null) {\n      this._loading = val;\n      this.cdr.detectChanges();\n    }\n  }\n\n  private loadData(options?: STDataSourceOptions): Promise<STDataSourceResult> {\n    const { pi, ps, data, req, res, page, total, singleSort, multiSort, rowClassName } = this;\n    return new Promise((resolvePromise, rejectPromise) => {\n      if (this.data$) {\n        this.data$.unsubscribe();\n      }\n\n      this.data$ = this.dataSource\n        .process({\n          pi,\n          ps,\n          total,\n          data,\n          req,\n          res,\n          page,\n          columns: this._columns,\n          singleSort,\n          multiSort,\n          rowClassName,\n          paginator: true,\n          ...options,\n        })\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          result => resolvePromise(result),\n          error => {\n            console.warn('st.loadDate', error);\n            rejectPromise(error);\n          },\n        );\n    });\n  }\n\n  private async loadPageData(): Promise<this> {\n    this.setLoading(true);\n    try {\n      const result = await this.loadData();\n      this.setLoading(false);\n      if (typeof result.pi !== 'undefined') {\n        this.pi = result.pi;\n      }\n      if (typeof result.ps !== 'undefined') {\n        this.ps = result.ps;\n      }\n      if (typeof result.total !== 'undefined') {\n        this.total = result.total;\n      }\n      if (typeof result.pageShow !== 'undefined') {\n        this._isPagination = result.pageShow;\n      }\n      this._data = result.list as STData[];\n      this._statistical = result.statistical as STStatisticalResults;\n      this.changeEmit('loaded', result.list);\n      // Should be re-render in next tike when using virtual scroll\n      // https://github.com/ng-alain/ng-alain/issues/1836\n      if (this.cdkVirtualScrollViewport) {\n        Promise.resolve().then(() => this.cdkVirtualScrollViewport.checkViewportSize());\n      }\n      return this._refCheck();\n    } catch (error) {\n      this.setLoading(false);\n      if (!this.unsubscribe$.isStopped) {\n        this.cdr.detectChanges();\n        this.error.emit({ type: 'req', error });\n      }\n      return this;\n    }\n  }\n\n  /** 清空所有数据 */\n  clear(cleanStatus: boolean = true): this {\n    if (cleanStatus) {\n      this.clearStatus();\n    }\n    this._data = [];\n    return this.cd();\n  }\n\n  /** 清空所有状态 */\n  clearStatus(): this {\n    return this.clearCheck().clearRadio().clearFilter().clearSort();\n  }\n\n  /**\n   * 根据页码重新加载数据\n   *\n   * @param pi 指定当前页码，默认：`1`\n   * @param extraParams 重新指定 `extraParams` 值\n   * @param options 选项\n   */\n  load(pi: number = 1, extraParams?: {}, options?: STLoadOptions): this {\n    if (pi !== -1) this.pi = pi;\n    if (typeof extraParams !== 'undefined') {\n      this.req.params = options && options.merge ? { ...this.req.params, ...extraParams } : extraParams;\n    }\n    this._change('pi', options);\n    return this;\n  }\n\n  /**\n   * 重新刷新当前页\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reload(extraParams?: {}, options?: STLoadOptions): this {\n    return this.load(-1, extraParams, options);\n  }\n\n  /**\n   * 重置且重新设置 `pi` 为 `1`，包含以下值：\n   * - `check` 数据\n   * - `radio` 数据\n   * - `sort` 数据\n   * - `fileter` 数据\n   *\n   * @param extraParams 重新指定 `extraParams` 值\n   */\n  reset(extraParams?: {}, options?: STLoadOptions): this {\n    this.clearStatus().load(1, extraParams, options);\n    return this;\n  }\n\n  private _toTop(enforce?: boolean): void {\n    if (!(enforce == null ? this.page.toTop : enforce)) return;\n    const el = this.el.nativeElement as HTMLElement;\n    if (this.scroll) {\n      if (this.cdkVirtualScrollViewport) {\n        this.cdkVirtualScrollViewport.scrollTo({\n          top: 0,\n          left: 0,\n        });\n      } else {\n        el.querySelector('.ant-table-body, .ant-table-content')?.scrollTo(0, 0);\n      }\n      return;\n    }\n    el.scrollIntoView();\n    // fix header height\n    this.doc.documentElement.scrollTop -= this.page.toTopOffset!;\n  }\n\n  _change(type: 'pi' | 'ps', options?: STLoadOptions): void {\n    if (type === 'pi' || (type === 'ps' && this.pi <= Math.ceil(this.total / this.ps))) {\n      this.loadPageData().then(() => this._toTop(options?.toTop));\n    }\n\n    this.changeEmit(type);\n  }\n\n  _click(e: Event, item: STData, col: STColumn): boolean {\n    e.preventDefault();\n    e.stopPropagation();\n    const res = col.click!(item, this);\n    if (typeof res === 'string') {\n      this.router.navigateByUrl(res, { state: this.routerState });\n    }\n    return false;\n  }\n  private closeOtherExpand(item: STData): void {\n    if (this.expandAccordion === false) return;\n    this._data.filter(i => i !== item).forEach(i => (i.expand = false));\n  }\n  _rowClick(e: Event, item: STData, index: number): void {\n    if ((e.target as HTMLElement).nodeName === 'INPUT') return;\n    const { expand, expandRowByClick, rowClickTime } = this;\n    if (!!expand && item.showExpand !== false && expandRowByClick) {\n      item.expand = !item.expand;\n      this.closeOtherExpand(item);\n      this.changeEmit('expand', item);\n      return;\n    }\n    ++this.rowClickCount;\n    if (this.rowClickCount !== 1) return;\n    setTimeout(() => {\n      const data = { e, item, index };\n      if (this.rowClickCount === 1) {\n        this.changeEmit('click', data);\n      } else {\n        this.changeEmit('dblClick', data);\n      }\n      this.rowClickCount = 0;\n    }, rowClickTime);\n  }\n\n  _expandChange(item: STData, expand: boolean): void {\n    if (this.expandRowByClick) {\n      return;\n    }\n    item.expand = expand;\n    this.closeOtherExpand(item);\n    this.changeEmit('expand', item);\n  }\n\n  private refreshData(): this {\n    this._data = [...this._data];\n    return this.cd();\n  }\n\n  private _refColAndData(): this {\n    this._columns\n      .filter(w => w.type === 'no')\n      .forEach(c =>\n        this._data.forEach((i, idx) => {\n          const text = `${this.dataSource.getNoIndex(i, c, idx)}`;\n          i._values![c.__point!] = { text, _text: text, org: idx, safeType: 'text' } as _STDataValue;\n        })\n      );\n\n    return this.refreshData();\n  }\n\n  /**\n   * Remove a row in the table, like this:\n   *\n   * ```\n   * this.st.removeRow(0)\n   * this.st.removeRow(stDataItem)\n   * ```\n   */\n  removeRow(data: STData | STData[] | number): this {\n    if (typeof data === 'number') {\n      this._data.splice(data, 1);\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      (data as STData[])\n        .map(item => this._data.indexOf(item))\n        .filter(pos => pos !== -1)\n        .forEach(pos => this._data.splice(pos, 1));\n    }\n    // recalculate no\n    this._refColAndData();\n\n    return this.cd();\n  }\n\n  /**\n   * Sets the row value for the `index` in the table, like this:\n   *\n   * - `optinos.refreshSchema` Whether to refresh of st schemas\n   * - `optinos.emitReload` Whether to trigger a reload http request when data is url\n   *\n   * ```\n   * this.st.setRow(0, { price: 100 })\n   * this.st.setRow(0, { price: 100, name: 'asdf' })\n   * this.st.setRow(item, { price: 100 })\n   * ```\n   */\n  setRow(index: number | STData, item: STData, options?: { refreshSchema?: boolean; emitReload?: boolean }): this {\n    options = { refreshSchema: false, emitReload: false, ...options };\n    if (typeof index !== 'number') {\n      index = this._data.indexOf(index);\n    }\n    this._data[index] = deepMergeKey(this._data[index], false, item);\n    this.optimizeData();\n    if (options.refreshSchema) {\n      this.resetColumns({ emitReload: options.emitReload });\n      return this;\n    }\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  // #endregion\n\n  // #region sort\n\n  sort(col: _STColumn, idx: number, value: any): void {\n    if (this.multiSort) {\n      col._sort!.default = value;\n      col._sort!.tick = this.dataSource.nextSortTick;\n    } else {\n      this._columns.forEach((item, index) => (item._sort!.default = index === idx ? value : null));\n    }\n    this.cdr.detectChanges();\n    this.loadPageData();\n    const res = {\n      value,\n      map: this.dataSource.getReqSortMap(this.singleSort, this.multiSort, this._columns),\n      column: col,\n    };\n    this.changeEmit('sort', res);\n  }\n\n  clearSort(): this {\n    this._columns.forEach(item => (item._sort!.default = null));\n    return this;\n  }\n\n  // #endregion\n\n  // #region filter\n\n  private handleFilter(col: STColumn): void {\n    // 过滤表示一种数据的变化应重置页码为 `1`\n    this.pi = 1;\n    this.columnSource.updateDefault(col.filter!);\n    this.loadPageData();\n    this.changeEmit('filter', col);\n  }\n\n  _filterConfirm(col: _STColumn): void {\n    this.handleFilter(col);\n  }\n\n  _filterRadio(col: _STColumn, item: STColumnFilterMenu, checked: boolean): void {\n    col.filter!.menus!.forEach(i => (i.checked = false));\n    item.checked = checked;\n  }\n\n  _filterClear(col: _STColumn): void {\n    this.columnSource.cleanFilter(col);\n    this.handleFilter(col);\n  }\n\n  clearFilter(): this {\n    this._columns.filter(w => w.filter && w.filter.default === true).forEach(col => this.columnSource.cleanFilter(col));\n    return this;\n  }\n\n  _filterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  // #endregion\n\n  // #region checkbox\n\n  /** 清除所有 `checkbox` */\n  clearCheck(): this {\n    return this._checkAll(false);\n  }\n\n  private _refCheck(): this {\n    const validData = this._data.filter(w => !w.disabled);\n    const checkedList = validData.filter(w => w.checked === true);\n    this._allChecked = checkedList.length > 0 && checkedList.length === validData.length;\n    const allUnChecked = validData.every(value => !value.checked);\n    this._indeterminate = !this._allChecked && !allUnChecked;\n    this._allCheckedDisabled = this._data.length === this._data.filter(w => w.disabled).length;\n    return this.cd();\n  }\n\n  _checkAll(checked?: boolean): this {\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkSelection(i: STData, value: boolean): this {\n    i.checked = value;\n    return this._refCheck()._checkNotify();\n  }\n\n  _rowSelection(row: STColumnSelection): this {\n    row.select(this._data);\n    return this._refCheck()._checkNotify();\n  }\n\n  _checkNotify(): this {\n    const res = this._data.filter(w => !w.disabled && w.checked === true);\n    this.changeEmit('checkbox', res);\n    return this;\n  }\n\n  // #endregion\n\n  // #region radio\n\n  /** 清除所有 `radio` */\n  clearRadio(): this {\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\n    this.changeEmit('radio', null);\n    return this;\n  }\n\n  _refRadio(checked: boolean, item: STData): this {\n    // if (item.disabled === true) return;\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\n    item.checked = checked;\n    this.changeEmit('radio', item);\n    return this;\n  }\n\n  // #endregion\n\n  // #region buttons\n\n  _btnClick(record: STData, btn: STColumnButton, e?: Event): void {\n    // should be stop propagation when expandRowByClick is true\n    if (e && this.expandRowByClick === true) {\n      e.stopPropagation();\n    }\n    if (btn.type === 'modal' || btn.type === 'static') {\n      const { modal } = btn;\n      const obj = { [modal!.paramsName!]: record };\n      (this.modalHelper[btn.type === 'modal' ? 'create' : 'createStatic'] as any)(\n        modal!.component,\n        { ...obj, ...(modal!.params && modal!.params!(record)) },\n        deepMergeKey({}, true, this.cog.modal, modal),\n      )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe((res: NzSafeAny) => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'drawer') {\n      const { drawer } = btn;\n      const obj = { [drawer!.paramsName!]: record };\n      this.drawerHelper\n        .create(\n          drawer!.title!,\n          drawer!.component,\n          { ...obj, ...(drawer!.params && drawer!.params!(record)) },\n          deepMergeKey({}, true, this.cog.drawer, drawer),\n        )\n        .pipe(filter(w => typeof w !== 'undefined'))\n        .subscribe(res => this.btnCallback(record, btn, res));\n      return;\n    } else if (btn.type === 'link') {\n      const clickRes = this.btnCallback(record, btn);\n      if (typeof clickRes === 'string') {\n        this.router.navigateByUrl(clickRes, { state: this.routerState });\n      }\n      return;\n    }\n    this.btnCallback(record, btn);\n  }\n\n  private btnCallback(record: STData, btn: STColumnButton, modal?: any): any {\n    if (!btn.click) return;\n    if (typeof btn.click === 'string') {\n      switch (btn.click) {\n        case 'load':\n          this.load();\n          break;\n        case 'reload':\n          this.reload();\n          break;\n      }\n    } else {\n      return btn.click(record, modal, this);\n    }\n  }\n\n  _btnText(record: STData, btn: STColumnButton): string {\n    return typeof btn.text === 'function' ? btn.text(record, btn) : btn.text || '';\n  }\n\n  _validBtns(btns: STColumnButton[], item: STData, col: STColumn): STColumnButton[] {\n    return btns.filter(btn => {\n      const result = btn.iif!(item, btn, col);\n      const isRenderDisabled = btn.iifBehavior === 'disabled';\n      btn._result = result;\n      btn._disabled = !result && isRenderDisabled;\n      return result || isRenderDisabled;\n    });\n  }\n\n  // #endregion\n\n  // #region export\n\n  /**\n   * 导出当前页，确保已经注册 `XlsxModule`\n   * @param newData 重新指定数据；若为 `true` 表示使用 `filteredData` 数据\n   * @param opt 额外参数\n   */\n  export(newData?: STData[] | true, opt?: STExportOptions): void {\n    (newData === true ? from(this.filteredData) : of(newData || this._data)).subscribe((res: STData[]) =>\n      this.exportSrv.export({\n        ...opt,\n        data: res,\n        columens: this._columns,\n      }),\n    );\n  }\n\n  // #endregion\n\n  // #region resizable\n\n  colResize({ width }: NzResizeEvent, column: _STColumn): void {\n    column.width = `${width}px`;\n    this.changeEmit('resize', column);\n  }\n\n  // #endregion\n\n  // #region contextmenu\n  onContextmenu(event: MouseEvent): void {\n    if (!this.contextmenu) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    const colEl = (event.target as HTMLElement).closest('[data-col-index]') as HTMLElement;\n    if (!colEl) {\n      return;\n    }\n    const colIndex = Number(colEl.dataset.colIndex);\n    const rowIndex = Number((colEl.closest('tr') as HTMLElement).dataset.index);\n    const isTitle = isNaN(rowIndex);\n    const obs$ = this.contextmenu({\n      event,\n      type: isTitle ? 'head' : 'body',\n      rowIndex: isTitle ? null : rowIndex,\n      colIndex,\n      data: isTitle ? null : this.list[rowIndex],\n      column: this._columns[colIndex],\n    });\n    (isObservable(obs$) ? obs$ : of(obs$))\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(res => res.length > 0),\n      )\n      .subscribe(res => {\n        this.contextmenuList = res.map(i => {\n          if (!Array.isArray(i.children)) {\n            i.children = [];\n          }\n          return i;\n        });\n        this.cdr.detectChanges();\n        this.cms.create(event, this.contextmenuTpl);\n      });\n  }\n  // #endregion\n\n  get cdkVirtualScrollViewport(): CdkVirtualScrollViewport {\n    return this.orgTable.cdkVirtualScrollViewport!;\n  }\n\n  resetColumns(options?: STResetColumnsOption): Promise<this> {\n    options = { emitReload: true, preClearData: false, ...options };\n    if (typeof options.columns !== 'undefined') {\n      this.columns = options.columns;\n    }\n    if (typeof options.pi !== 'undefined') {\n      this.pi = options.pi;\n    }\n    if (typeof options.ps !== 'undefined') {\n      this.ps = options.ps;\n    }\n    if (options.emitReload) {\n      // Should clean data, Because of changing columns may cause inaccurate data\n      options.preClearData = true;\n    }\n    if (options.preClearData) {\n      this._data = [];\n    }\n    this.refreshColumns();\n    if (options.emitReload) {\n      return this.loadPageData();\n    } else {\n      this.cd();\n      return Promise.resolve(this);\n    }\n  }\n\n  private refreshColumns(): this {\n    const res = this.columnSource.process(this.columns as _STColumn[], {\n      widthMode: this.widthMode,\n      resizable: this._resizable,\n      safeType: this.cog.safeType as STColumnSafeType\n    });\n    this._columns = res.columns;\n    this._headers = res.headers;\n    if (this.customWidthConfig === false && res.headerWidths != null) {\n      this._widthConfig = res.headerWidths;\n    }\n    return this;\n  }\n\n  private optimizeData(): void {\n    this._data = this.dataSource.optimizeData({ columns: this._columns, result: this._data, rowClassName: this.rowClassName });\n  }\n\n  /**\n   * Return pure data, `st` internally maintains a set of data for caching, this part of data may affect the backend\n   *\n   * 返回纯净数据，`st` 内部会维护一组用于缓存的数据，这部分数据可能会影响后端\n   */\n  pureItem(itemOrIndex: STData | number): STData | null {\n    if (typeof itemOrIndex === 'number') {\n      itemOrIndex = this._data[itemOrIndex];\n    }\n    if (!itemOrIndex) {\n      return null;\n    }\n    const copyItem = deepCopy(itemOrIndex);\n    delete copyItem._values;\n    return copyItem;\n  }\n\n  ngAfterViewInit(): void {\n    this.columnSource.restoreAllRender(this._columns);\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (changes.columns) {\n      this.refreshColumns().optimizeData();\n    }\n    const changeData = changes.data;\n    if (changeData && changeData.currentValue && !(this.req.lazyLoad && changeData.firstChange)) {\n      this.loadPageData();\n    }\n    if (changes.loading) {\n      this._loading = changes.loading.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonACLModule } from '@delon/acl';\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzResizableModule } from 'ng-zorro-antd/resizable';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { STRowDirective } from './st-row.directive';\nimport { STWidgetHostDirective } from './st-widget-host.directive';\nimport { STComponent } from './st.component';\n\nconst COMPONENTS = [STComponent];\nconst DIRECTIVES = [STRowDirective, STWidgetHostDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DelonACLModule,\n    NzPopconfirmModule,\n    NzTableModule,\n    NzIconModule,\n    NzBadgeModule,\n    NzCheckboxModule,\n    NzDividerModule,\n    NzDropDownModule,\n    NzMenuModule,\n    NzRadioModule,\n    NzTagModule,\n    NzInputModule,\n    NzToolTipModule,\n    NzResizableModule,\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class STModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {STRowSource as ɵa} from './st-row.directive';"],"names":["Injectable","Directive","TemplateRef","Host","Input","warn","deepCopy","DomSanitizer","ACLService","Optional","Inject","ALAIN_I18N_TOKEN","map","deepGet","of","HttpParams","_HttpClient","DatePipe","YNPipe","DecimalPipe","CurrencyService","XlsxService","ViewContainerRef","ComponentFactoryResolver","Subject","EventEmitter","takeUntil","filter","deepMergeKey","toBoolean","from","isObservable","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","Router","ElementRef","ModalHelper","DrawerHelper","DOCUMENT","DelonLocaleService","AlainConfigService","NzContextMenuService","ViewChild","Output","InputNumber","InputBoolean","NgModule","CommonModule","FormsModule","DelonACLModule","NzPopconfirmModule","NzTableModule","NzIconModule","NzBadgeModule","NzCheckboxModule","NzDividerModule","NzDropDownModule","NzMenuModule","NzRadioModule","NzTagModule","NzInputModule","NzToolTipModule","NzResizableModule"],"mappings":"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"}